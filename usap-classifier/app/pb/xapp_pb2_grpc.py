# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import xapp_pb2 as xapp__pb2

GRPC_GENERATED_VERSION = '1.66.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(
        GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in xapp_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class E2NodesInfoServiceStub(object):
    """************************************************************
    ************************* SERVICES **************************
    ***********************************************************

    Unary
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getE2Nodes = channel.unary_unary(
            '/xapp.E2NodesInfoService/getE2Nodes',
            request_serializer=xapp__pb2.EmptyRequest.SerializeToString,
            response_deserializer=xapp__pb2.E2NodesResponse.FromString,
            _registered_method=True)


class E2NodesInfoServiceServicer(object):
    """************************************************************
    ************************* SERVICES **************************
    ***********************************************************

    Unary
    """

    def getE2Nodes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_E2NodesInfoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'getE2Nodes': grpc.unary_unary_rpc_method_handler(
            servicer.getE2Nodes,
            request_deserializer=xapp__pb2.EmptyRequest.FromString,
            response_serializer=xapp__pb2.E2NodesResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'xapp.E2NodesInfoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers(
        'xapp.E2NodesInfoService', rpc_method_handlers)

 # This class is part of an EXPERIMENTAL API.


class E2NodesInfoService(object):
    """************************************************************
    ************************* SERVICES **************************
    ***********************************************************

    Unary
    """

    @staticmethod
    def getE2Nodes(request,
                   target,
                   options=(),
                   channel_credentials=None,
                   call_credentials=None,
                   insecure=False,
                   compression=None,
                   wait_for_ready=None,
                   timeout=None,
                   metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xapp.E2NodesInfoService/getE2Nodes',
            xapp__pb2.EmptyRequest.SerializeToString,
            xapp__pb2.E2NodesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class KPMIndicationServiceStub(object):
    """Stream: Server -> Client
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.IndicationStyle4Stream = channel.unary_stream(
            '/xapp.KPMIndicationService/IndicationStyle4Stream',
            request_serializer=xapp__pb2.EmptyRequest.SerializeToString,
            response_deserializer=xapp__pb2.IndStyle4Response.FromString,
            _registered_method=True)


class KPMIndicationServiceServicer(object):
    """Stream: Server -> Client
    """

    def IndicationStyle4Stream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KPMIndicationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'IndicationStyle4Stream': grpc.unary_stream_rpc_method_handler(
            servicer.IndicationStyle4Stream,
            request_deserializer=xapp__pb2.EmptyRequest.FromString,
            response_serializer=xapp__pb2.IndStyle4Response.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'xapp.KPMIndicationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers(
        'xapp.KPMIndicationService', rpc_method_handlers)

 # This class is part of an EXPERIMENTAL API.


class KPMIndicationService(object):
    """Stream: Server -> Client
    """

    @staticmethod
    def IndicationStyle4Stream(request,
                               target,
                               options=(),
                               channel_credentials=None,
                               call_credentials=None,
                               insecure=False,
                               compression=None,
                               wait_for_ready=None,
                               timeout=None,
                               metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/xapp.KPMIndicationService/IndicationStyle4Stream',
            xapp__pb2.EmptyRequest.SerializeToString,
            xapp__pb2.IndStyle4Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
