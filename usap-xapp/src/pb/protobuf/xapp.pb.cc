// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protobuf/xapp.proto
// Protobuf C++ Version: 5.27.2

#include "protobuf/xapp.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace xapp {

inline constexpr UEIDs::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : gnb_cu_ue_f1ap_id_{::uint64_t{0u}},
        amf_ue_ngap_id_{::uint64_t{0u}},
        ran_ue_id_{::uint64_t{0u}},
        gnb_cu_cp_ue_e1ap_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UEIDs::UEIDs(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UEIDsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UEIDsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UEIDsDefaultTypeInternal() {}
  union {
    UEIDs _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UEIDsDefaultTypeInternal _UEIDs_default_instance_;

inline constexpr PlmnId::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mcc_{0u},
        mnc_{0u},
        mnc_digit_len_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlmnId::PlmnId(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PlmnIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlmnIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlmnIdDefaultTypeInternal() {}
  union {
    PlmnId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlmnIdDefaultTypeInternal _PlmnId_default_instance_;

inline constexpr MeasInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : meas_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        meas_value_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR MeasInfo::MeasInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MeasInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MeasInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MeasInfoDefaultTypeInternal() {}
  union {
    MeasInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MeasInfoDefaultTypeInternal _MeasInfo_default_instance_;

inline constexpr KPMIndicationRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : svc_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR KPMIndicationRequest::KPMIndicationRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct KPMIndicationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KPMIndicationRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~KPMIndicationRequestDefaultTypeInternal() {}
  union {
    KPMIndicationRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KPMIndicationRequestDefaultTypeInternal _KPMIndicationRequest_default_instance_;

inline constexpr E2NodeInfos::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        node_type_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nodeb_id_{0u},
        mcc_{0u},
        mnc_{0u},
        mnc_digit_len_{0u},
        cu_du_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR E2NodeInfos::E2NodeInfos(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct E2NodeInfosDefaultTypeInternal {
  PROTOBUF_CONSTEXPR E2NodeInfosDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~E2NodeInfosDefaultTypeInternal() {}
  union {
    E2NodeInfos _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 E2NodeInfosDefaultTypeInternal _E2NodeInfos_default_instance_;

inline constexpr UEInfos::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ue_meas_info_{},
        ue_id_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UEInfos::UEInfos(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UEInfosDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UEInfosDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UEInfosDefaultTypeInternal() {}
  union {
    UEInfos _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UEInfosDefaultTypeInternal _UEInfos_default_instance_;

inline constexpr Guami_t::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        plmn_{nullptr},
        amf_region_id_{0u},
        amf_set_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Guami_t::Guami_t(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Guami_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Guami_tDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Guami_tDefaultTypeInternal() {}
  union {
    Guami_t _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Guami_tDefaultTypeInternal _Guami_t_default_instance_;

inline constexpr KPMIndicationResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ue_{nullptr},
        collectstarttime_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR KPMIndicationResponse::KPMIndicationResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct KPMIndicationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KPMIndicationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~KPMIndicationResponseDefaultTypeInternal() {}
  union {
    KPMIndicationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KPMIndicationResponseDefaultTypeInternal _KPMIndicationResponse_default_instance_;
}  // namespace xapp
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_protobuf_2fxapp_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protobuf_2fxapp_2eproto = nullptr;
const ::uint32_t
    TableStruct_protobuf_2fxapp_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xapp::KPMIndicationRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xapp::KPMIndicationRequest, _impl_.svc_name_),
        PROTOBUF_FIELD_OFFSET(::xapp::KPMIndicationResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::xapp::KPMIndicationResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xapp::KPMIndicationResponse, _impl_.collectstarttime_),
        PROTOBUF_FIELD_OFFSET(::xapp::KPMIndicationResponse, _impl_.ue_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::xapp::E2NodeInfos, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::xapp::E2NodeInfos, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xapp::E2NodeInfos, _impl_.nodeb_id_),
        PROTOBUF_FIELD_OFFSET(::xapp::E2NodeInfos, _impl_.node_type_name_),
        PROTOBUF_FIELD_OFFSET(::xapp::E2NodeInfos, _impl_.mcc_),
        PROTOBUF_FIELD_OFFSET(::xapp::E2NodeInfos, _impl_.mnc_),
        PROTOBUF_FIELD_OFFSET(::xapp::E2NodeInfos, _impl_.mnc_digit_len_),
        PROTOBUF_FIELD_OFFSET(::xapp::E2NodeInfos, _impl_.cu_du_id_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::xapp::UEInfos, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::xapp::UEInfos, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xapp::UEInfos, _impl_.ue_id_),
        PROTOBUF_FIELD_OFFSET(::xapp::UEInfos, _impl_.ue_meas_info_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xapp::UEIDs, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xapp::UEIDs, _impl_.gnb_cu_ue_f1ap_id_),
        PROTOBUF_FIELD_OFFSET(::xapp::UEIDs, _impl_.amf_ue_ngap_id_),
        PROTOBUF_FIELD_OFFSET(::xapp::UEIDs, _impl_.gnb_cu_cp_ue_e1ap_id_),
        PROTOBUF_FIELD_OFFSET(::xapp::UEIDs, _impl_.ran_ue_id_),
        PROTOBUF_FIELD_OFFSET(::xapp::Guami_t, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::xapp::Guami_t, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xapp::Guami_t, _impl_.plmn_),
        PROTOBUF_FIELD_OFFSET(::xapp::Guami_t, _impl_.amf_region_id_),
        PROTOBUF_FIELD_OFFSET(::xapp::Guami_t, _impl_.amf_set_id_),
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xapp::PlmnId, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xapp::PlmnId, _impl_.mcc_),
        PROTOBUF_FIELD_OFFSET(::xapp::PlmnId, _impl_.mnc_),
        PROTOBUF_FIELD_OFFSET(::xapp::PlmnId, _impl_.mnc_digit_len_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xapp::MeasInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::xapp::MeasInfo, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xapp::MeasInfo, _impl_.meas_name_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::xapp::MeasInfo, _impl_.meas_value_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::xapp::KPMIndicationRequest)},
        {9, 19, -1, sizeof(::xapp::KPMIndicationResponse)},
        {21, 35, -1, sizeof(::xapp::E2NodeInfos)},
        {41, 51, -1, sizeof(::xapp::UEInfos)},
        {53, -1, -1, sizeof(::xapp::UEIDs)},
        {65, 76, -1, sizeof(::xapp::Guami_t)},
        {79, -1, -1, sizeof(::xapp::PlmnId)},
        {90, -1, -1, sizeof(::xapp::MeasInfo)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::xapp::_KPMIndicationRequest_default_instance_._instance,
    &::xapp::_KPMIndicationResponse_default_instance_._instance,
    &::xapp::_E2NodeInfos_default_instance_._instance,
    &::xapp::_UEInfos_default_instance_._instance,
    &::xapp::_UEIDs_default_instance_._instance,
    &::xapp::_Guami_t_default_instance_._instance,
    &::xapp::_PlmnId_default_instance_._instance,
    &::xapp::_MeasInfo_default_instance_._instance,
};
const char descriptor_table_protodef_protobuf_2fxapp_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\023protobuf/xapp.proto\022\004xapp\"(\n\024KPMIndica"
    "tionRequest\022\020\n\010svc_name\030\001 \001(\t\"L\n\025KPMIndi"
    "cationResponse\022\030\n\020collectStartTime\030\001 \001(\004"
    "\022\031\n\002ue\030\002 \001(\0132\r.xapp.UEInfos\"\214\001\n\013E2NodeIn"
    "fos\022\020\n\010nodeb_id\030\001 \001(\r\022\026\n\016node_type_name\030"
    "\002 \001(\t\022\013\n\003mcc\030\003 \001(\r\022\013\n\003mnc\030\004 \001(\r\022\025\n\rmnc_d"
    "igit_len\030\005 \001(\r\022\025\n\010cu_du_id\030\006 \001(\rH\000\210\001\001B\013\n"
    "\t_cu_du_id\"K\n\007UEInfos\022\032\n\005ue_id\030\001 \001(\0132\013.x"
    "app.UEIDs\022$\n\014ue_meas_info\030\002 \003(\0132\016.xapp.M"
    "easInfo\"k\n\005UEIDs\022\031\n\021gnb_cu_ue_f1ap_id\030\001 "
    "\001(\004\022\026\n\016amf_ue_ngap_id\030\002 \001(\004\022\034\n\024gnb_cu_cp"
    "_ue_e1ap_id\030\003 \001(\r\022\021\n\tran_ue_id\030\004 \001(\004\"P\n\007"
    "Guami_t\022\032\n\004plmn\030\001 \001(\0132\014.xapp.PlmnId\022\025\n\ra"
    "mf_region_id\030\002 \001(\r\022\022\n\namf_set_id\030\003 \001(\r\"9"
    "\n\006PlmnId\022\013\n\003mcc\030\001 \001(\r\022\013\n\003mnc\030\002 \001(\r\022\025\n\rmn"
    "c_digit_len\030\003 \001(\r\"V\n\010MeasInfo\022\021\n\tmeas_na"
    "me\030\001 \001(\t\022\023\n\tint_value\030\002 \001(\004H\000\022\024\n\nreal_va"
    "lue\030\003 \001(\001H\000B\014\n\nmeas_value2d\n\020E2SM_KPM_Se"
    "rvice\022P\n\023GetIndicationStream\022\032.xapp.KPMI"
    "ndicationRequest\032\033.xapp.KPMIndicationRes"
    "ponse0\001B\006Z\004./pbb\006proto3"
};
static ::absl::once_flag descriptor_table_protobuf_2fxapp_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_protobuf_2fxapp_2eproto = {
    false,
    false,
    823,
    descriptor_table_protodef_protobuf_2fxapp_2eproto,
    "protobuf/xapp.proto",
    &descriptor_table_protobuf_2fxapp_2eproto_once,
    nullptr,
    0,
    8,
    schemas,
    file_default_instances,
    TableStruct_protobuf_2fxapp_2eproto::offsets,
    file_level_enum_descriptors_protobuf_2fxapp_2eproto,
    file_level_service_descriptors_protobuf_2fxapp_2eproto,
};
namespace xapp {
// ===================================================================

class KPMIndicationRequest::_Internal {
 public:
};

KPMIndicationRequest::KPMIndicationRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xapp.KPMIndicationRequest)
}
inline PROTOBUF_NDEBUG_INLINE KPMIndicationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xapp::KPMIndicationRequest& from_msg)
      : svc_name_(arena, from.svc_name_),
        _cached_size_{0} {}

KPMIndicationRequest::KPMIndicationRequest(
    ::google::protobuf::Arena* arena,
    const KPMIndicationRequest& from)
    : ::google::protobuf::Message(arena) {
  KPMIndicationRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:xapp.KPMIndicationRequest)
}
inline PROTOBUF_NDEBUG_INLINE KPMIndicationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : svc_name_(arena),
        _cached_size_{0} {}

inline void KPMIndicationRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
KPMIndicationRequest::~KPMIndicationRequest() {
  // @@protoc_insertion_point(destructor:xapp.KPMIndicationRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void KPMIndicationRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.svc_name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
KPMIndicationRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(KPMIndicationRequest, _impl_._cached_size_),
              false,
          },
          &KPMIndicationRequest::MergeImpl,
          &KPMIndicationRequest::kDescriptorMethods,
          &descriptor_table_protobuf_2fxapp_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 42, 2> KPMIndicationRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_KPMIndicationRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xapp::KPMIndicationRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string svc_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(KPMIndicationRequest, _impl_.svc_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string svc_name = 1;
    {PROTOBUF_FIELD_OFFSET(KPMIndicationRequest, _impl_.svc_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\10\0\0\0\0\0\0"
    "xapp.KPMIndicationRequest"
    "svc_name"
  }},
};

PROTOBUF_NOINLINE void KPMIndicationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xapp.KPMIndicationRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.svc_name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* KPMIndicationRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xapp.KPMIndicationRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string svc_name = 1;
  if (!this->_internal_svc_name().empty()) {
    const std::string& _s = this->_internal_svc_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xapp.KPMIndicationRequest.svc_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xapp.KPMIndicationRequest)
  return target;
}

::size_t KPMIndicationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xapp.KPMIndicationRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string svc_name = 1;
  if (!this->_internal_svc_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_svc_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void KPMIndicationRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<KPMIndicationRequest*>(&to_msg);
  auto& from = static_cast<const KPMIndicationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xapp.KPMIndicationRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_svc_name().empty()) {
    _this->_internal_set_svc_name(from._internal_svc_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void KPMIndicationRequest::CopyFrom(const KPMIndicationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xapp.KPMIndicationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void KPMIndicationRequest::InternalSwap(KPMIndicationRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.svc_name_, &other->_impl_.svc_name_, arena);
}

::google::protobuf::Metadata KPMIndicationRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class KPMIndicationResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<KPMIndicationResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(KPMIndicationResponse, _impl_._has_bits_);
};

KPMIndicationResponse::KPMIndicationResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xapp.KPMIndicationResponse)
}
inline PROTOBUF_NDEBUG_INLINE KPMIndicationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xapp::KPMIndicationResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

KPMIndicationResponse::KPMIndicationResponse(
    ::google::protobuf::Arena* arena,
    const KPMIndicationResponse& from)
    : ::google::protobuf::Message(arena) {
  KPMIndicationResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ue_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::xapp::UEInfos>(
                              arena, *from._impl_.ue_)
                        : nullptr;
  _impl_.collectstarttime_ = from._impl_.collectstarttime_;

  // @@protoc_insertion_point(copy_constructor:xapp.KPMIndicationResponse)
}
inline PROTOBUF_NDEBUG_INLINE KPMIndicationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void KPMIndicationResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ue_),
           0,
           offsetof(Impl_, collectstarttime_) -
               offsetof(Impl_, ue_) +
               sizeof(Impl_::collectstarttime_));
}
KPMIndicationResponse::~KPMIndicationResponse() {
  // @@protoc_insertion_point(destructor:xapp.KPMIndicationResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void KPMIndicationResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.ue_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
KPMIndicationResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(KPMIndicationResponse, _impl_._cached_size_),
              false,
          },
          &KPMIndicationResponse::MergeImpl,
          &KPMIndicationResponse::kDescriptorMethods,
          &descriptor_table_protobuf_2fxapp_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> KPMIndicationResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(KPMIndicationResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_KPMIndicationResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xapp::KPMIndicationResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .xapp.UEInfos ue = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(KPMIndicationResponse, _impl_.ue_)}},
    // uint64 collectStartTime = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(KPMIndicationResponse, _impl_.collectstarttime_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(KPMIndicationResponse, _impl_.collectstarttime_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 collectStartTime = 1;
    {PROTOBUF_FIELD_OFFSET(KPMIndicationResponse, _impl_.collectstarttime_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .xapp.UEInfos ue = 2;
    {PROTOBUF_FIELD_OFFSET(KPMIndicationResponse, _impl_.ue_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xapp::UEInfos>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void KPMIndicationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xapp.KPMIndicationResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ue_ != nullptr);
    _impl_.ue_->Clear();
  }
  _impl_.collectstarttime_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* KPMIndicationResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xapp.KPMIndicationResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 collectStartTime = 1;
  if (this->_internal_collectstarttime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_collectstarttime(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .xapp.UEInfos ue = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.ue_, _impl_.ue_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xapp.KPMIndicationResponse)
  return target;
}

::size_t KPMIndicationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xapp.KPMIndicationResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .xapp.UEInfos ue = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.ue_);
  }

  // uint64 collectStartTime = 1;
  if (this->_internal_collectstarttime() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_collectstarttime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void KPMIndicationResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<KPMIndicationResponse*>(&to_msg);
  auto& from = static_cast<const KPMIndicationResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:xapp.KPMIndicationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.ue_ != nullptr);
    if (_this->_impl_.ue_ == nullptr) {
      _this->_impl_.ue_ =
          ::google::protobuf::Message::CopyConstruct<::xapp::UEInfos>(arena, *from._impl_.ue_);
    } else {
      _this->_impl_.ue_->MergeFrom(*from._impl_.ue_);
    }
  }
  if (from._internal_collectstarttime() != 0) {
    _this->_impl_.collectstarttime_ = from._impl_.collectstarttime_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void KPMIndicationResponse::CopyFrom(const KPMIndicationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xapp.KPMIndicationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void KPMIndicationResponse::InternalSwap(KPMIndicationResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(KPMIndicationResponse, _impl_.collectstarttime_)
      + sizeof(KPMIndicationResponse::_impl_.collectstarttime_)
      - PROTOBUF_FIELD_OFFSET(KPMIndicationResponse, _impl_.ue_)>(
          reinterpret_cast<char*>(&_impl_.ue_),
          reinterpret_cast<char*>(&other->_impl_.ue_));
}

::google::protobuf::Metadata KPMIndicationResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class E2NodeInfos::_Internal {
 public:
  using HasBits =
      decltype(std::declval<E2NodeInfos>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(E2NodeInfos, _impl_._has_bits_);
};

E2NodeInfos::E2NodeInfos(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xapp.E2NodeInfos)
}
inline PROTOBUF_NDEBUG_INLINE E2NodeInfos::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xapp::E2NodeInfos& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        node_type_name_(arena, from.node_type_name_) {}

E2NodeInfos::E2NodeInfos(
    ::google::protobuf::Arena* arena,
    const E2NodeInfos& from)
    : ::google::protobuf::Message(arena) {
  E2NodeInfos* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, nodeb_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, nodeb_id_),
           offsetof(Impl_, cu_du_id_) -
               offsetof(Impl_, nodeb_id_) +
               sizeof(Impl_::cu_du_id_));

  // @@protoc_insertion_point(copy_constructor:xapp.E2NodeInfos)
}
inline PROTOBUF_NDEBUG_INLINE E2NodeInfos::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        node_type_name_(arena) {}

inline void E2NodeInfos::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, nodeb_id_),
           0,
           offsetof(Impl_, cu_du_id_) -
               offsetof(Impl_, nodeb_id_) +
               sizeof(Impl_::cu_du_id_));
}
E2NodeInfos::~E2NodeInfos() {
  // @@protoc_insertion_point(destructor:xapp.E2NodeInfos)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void E2NodeInfos::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.node_type_name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
E2NodeInfos::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(E2NodeInfos, _impl_._cached_size_),
              false,
          },
          &E2NodeInfos::MergeImpl,
          &E2NodeInfos::kDescriptorMethods,
          &descriptor_table_protobuf_2fxapp_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 39, 2> E2NodeInfos::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(E2NodeInfos, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_E2NodeInfos_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xapp::E2NodeInfos>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 nodeb_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(E2NodeInfos, _impl_.nodeb_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(E2NodeInfos, _impl_.nodeb_id_)}},
    // string node_type_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(E2NodeInfos, _impl_.node_type_name_)}},
    // uint32 mcc = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(E2NodeInfos, _impl_.mcc_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(E2NodeInfos, _impl_.mcc_)}},
    // uint32 mnc = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(E2NodeInfos, _impl_.mnc_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(E2NodeInfos, _impl_.mnc_)}},
    // uint32 mnc_digit_len = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(E2NodeInfos, _impl_.mnc_digit_len_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(E2NodeInfos, _impl_.mnc_digit_len_)}},
    // optional uint32 cu_du_id = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(E2NodeInfos, _impl_.cu_du_id_), 0>(),
     {48, 0, 0, PROTOBUF_FIELD_OFFSET(E2NodeInfos, _impl_.cu_du_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 nodeb_id = 1;
    {PROTOBUF_FIELD_OFFSET(E2NodeInfos, _impl_.nodeb_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string node_type_name = 2;
    {PROTOBUF_FIELD_OFFSET(E2NodeInfos, _impl_.node_type_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 mcc = 3;
    {PROTOBUF_FIELD_OFFSET(E2NodeInfos, _impl_.mcc_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 mnc = 4;
    {PROTOBUF_FIELD_OFFSET(E2NodeInfos, _impl_.mnc_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 mnc_digit_len = 5;
    {PROTOBUF_FIELD_OFFSET(E2NodeInfos, _impl_.mnc_digit_len_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // optional uint32 cu_du_id = 6;
    {PROTOBUF_FIELD_OFFSET(E2NodeInfos, _impl_.cu_du_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\20\0\16\0\0\0\0\0"
    "xapp.E2NodeInfos"
    "node_type_name"
  }},
};

PROTOBUF_NOINLINE void E2NodeInfos::Clear() {
// @@protoc_insertion_point(message_clear_start:xapp.E2NodeInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_type_name_.ClearToEmpty();
  ::memset(&_impl_.nodeb_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.mnc_digit_len_) -
      reinterpret_cast<char*>(&_impl_.nodeb_id_)) + sizeof(_impl_.mnc_digit_len_));
  _impl_.cu_du_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* E2NodeInfos::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xapp.E2NodeInfos)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 nodeb_id = 1;
  if (this->_internal_nodeb_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_nodeb_id(), target);
  }

  // string node_type_name = 2;
  if (!this->_internal_node_type_name().empty()) {
    const std::string& _s = this->_internal_node_type_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xapp.E2NodeInfos.node_type_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // uint32 mcc = 3;
  if (this->_internal_mcc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_mcc(), target);
  }

  // uint32 mnc = 4;
  if (this->_internal_mnc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_mnc(), target);
  }

  // uint32 mnc_digit_len = 5;
  if (this->_internal_mnc_digit_len() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_mnc_digit_len(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 cu_du_id = 6;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_cu_du_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xapp.E2NodeInfos)
  return target;
}

::size_t E2NodeInfos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xapp.E2NodeInfos)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string node_type_name = 2;
  if (!this->_internal_node_type_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_node_type_name());
  }

  // uint32 nodeb_id = 1;
  if (this->_internal_nodeb_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_nodeb_id());
  }

  // uint32 mcc = 3;
  if (this->_internal_mcc() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_mcc());
  }

  // uint32 mnc = 4;
  if (this->_internal_mnc() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_mnc());
  }

  // uint32 mnc_digit_len = 5;
  if (this->_internal_mnc_digit_len() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_mnc_digit_len());
  }

  // optional uint32 cu_du_id = 6;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_cu_du_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void E2NodeInfos::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<E2NodeInfos*>(&to_msg);
  auto& from = static_cast<const E2NodeInfos&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xapp.E2NodeInfos)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_node_type_name().empty()) {
    _this->_internal_set_node_type_name(from._internal_node_type_name());
  }
  if (from._internal_nodeb_id() != 0) {
    _this->_impl_.nodeb_id_ = from._impl_.nodeb_id_;
  }
  if (from._internal_mcc() != 0) {
    _this->_impl_.mcc_ = from._impl_.mcc_;
  }
  if (from._internal_mnc() != 0) {
    _this->_impl_.mnc_ = from._impl_.mnc_;
  }
  if (from._internal_mnc_digit_len() != 0) {
    _this->_impl_.mnc_digit_len_ = from._impl_.mnc_digit_len_;
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.cu_du_id_ = from._impl_.cu_du_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void E2NodeInfos::CopyFrom(const E2NodeInfos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xapp.E2NodeInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void E2NodeInfos::InternalSwap(E2NodeInfos* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_type_name_, &other->_impl_.node_type_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(E2NodeInfos, _impl_.cu_du_id_)
      + sizeof(E2NodeInfos::_impl_.cu_du_id_)
      - PROTOBUF_FIELD_OFFSET(E2NodeInfos, _impl_.nodeb_id_)>(
          reinterpret_cast<char*>(&_impl_.nodeb_id_),
          reinterpret_cast<char*>(&other->_impl_.nodeb_id_));
}

::google::protobuf::Metadata E2NodeInfos::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UEInfos::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UEInfos>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UEInfos, _impl_._has_bits_);
};

UEInfos::UEInfos(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xapp.UEInfos)
}
inline PROTOBUF_NDEBUG_INLINE UEInfos::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xapp::UEInfos& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ue_meas_info_{visibility, arena, from.ue_meas_info_} {}

UEInfos::UEInfos(
    ::google::protobuf::Arena* arena,
    const UEInfos& from)
    : ::google::protobuf::Message(arena) {
  UEInfos* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ue_id_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::xapp::UEIDs>(
                              arena, *from._impl_.ue_id_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:xapp.UEInfos)
}
inline PROTOBUF_NDEBUG_INLINE UEInfos::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        ue_meas_info_{visibility, arena} {}

inline void UEInfos::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ue_id_ = {};
}
UEInfos::~UEInfos() {
  // @@protoc_insertion_point(destructor:xapp.UEInfos)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UEInfos::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.ue_id_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UEInfos::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(UEInfos, _impl_._cached_size_),
              false,
          },
          &UEInfos::MergeImpl,
          &UEInfos::kDescriptorMethods,
          &descriptor_table_protobuf_2fxapp_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> UEInfos::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UEInfos, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UEInfos_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xapp::UEInfos>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .xapp.MeasInfo ue_meas_info = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(UEInfos, _impl_.ue_meas_info_)}},
    // .xapp.UEIDs ue_id = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UEInfos, _impl_.ue_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .xapp.UEIDs ue_id = 1;
    {PROTOBUF_FIELD_OFFSET(UEInfos, _impl_.ue_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .xapp.MeasInfo ue_meas_info = 2;
    {PROTOBUF_FIELD_OFFSET(UEInfos, _impl_.ue_meas_info_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xapp::UEIDs>()},
    {::_pbi::TcParser::GetTable<::xapp::MeasInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UEInfos::Clear() {
// @@protoc_insertion_point(message_clear_start:xapp.UEInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ue_meas_info_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ue_id_ != nullptr);
    _impl_.ue_id_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* UEInfos::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xapp.UEInfos)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .xapp.UEIDs ue_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.ue_id_, _impl_.ue_id_->GetCachedSize(), target, stream);
  }

  // repeated .xapp.MeasInfo ue_meas_info = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_ue_meas_info_size());
       i < n; i++) {
    const auto& repfield = this->_internal_ue_meas_info().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xapp.UEInfos)
  return target;
}

::size_t UEInfos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xapp.UEInfos)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .xapp.MeasInfo ue_meas_info = 2;
  total_size += 1UL * this->_internal_ue_meas_info_size();
  for (const auto& msg : this->_internal_ue_meas_info()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .xapp.UEIDs ue_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.ue_id_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UEInfos::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UEInfos*>(&to_msg);
  auto& from = static_cast<const UEInfos&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:xapp.UEInfos)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ue_meas_info()->MergeFrom(
      from._internal_ue_meas_info());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.ue_id_ != nullptr);
    if (_this->_impl_.ue_id_ == nullptr) {
      _this->_impl_.ue_id_ =
          ::google::protobuf::Message::CopyConstruct<::xapp::UEIDs>(arena, *from._impl_.ue_id_);
    } else {
      _this->_impl_.ue_id_->MergeFrom(*from._impl_.ue_id_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UEInfos::CopyFrom(const UEInfos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xapp.UEInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UEInfos::InternalSwap(UEInfos* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.ue_meas_info_.InternalSwap(&other->_impl_.ue_meas_info_);
  swap(_impl_.ue_id_, other->_impl_.ue_id_);
}

::google::protobuf::Metadata UEInfos::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UEIDs::_Internal {
 public:
};

UEIDs::UEIDs(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xapp.UEIDs)
}
UEIDs::UEIDs(
    ::google::protobuf::Arena* arena, const UEIDs& from)
    : UEIDs(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE UEIDs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UEIDs::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gnb_cu_ue_f1ap_id_),
           0,
           offsetof(Impl_, gnb_cu_cp_ue_e1ap_id_) -
               offsetof(Impl_, gnb_cu_ue_f1ap_id_) +
               sizeof(Impl_::gnb_cu_cp_ue_e1ap_id_));
}
UEIDs::~UEIDs() {
  // @@protoc_insertion_point(destructor:xapp.UEIDs)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UEIDs::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UEIDs::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(UEIDs, _impl_._cached_size_),
              false,
          },
          &UEIDs::MergeImpl,
          &UEIDs::kDescriptorMethods,
          &descriptor_table_protobuf_2fxapp_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> UEIDs::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UEIDs_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xapp::UEIDs>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 ran_ue_id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UEIDs, _impl_.ran_ue_id_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(UEIDs, _impl_.ran_ue_id_)}},
    // uint64 gnb_cu_ue_f1ap_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UEIDs, _impl_.gnb_cu_ue_f1ap_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UEIDs, _impl_.gnb_cu_ue_f1ap_id_)}},
    // uint64 amf_ue_ngap_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UEIDs, _impl_.amf_ue_ngap_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UEIDs, _impl_.amf_ue_ngap_id_)}},
    // uint32 gnb_cu_cp_ue_e1ap_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UEIDs, _impl_.gnb_cu_cp_ue_e1ap_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(UEIDs, _impl_.gnb_cu_cp_ue_e1ap_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 gnb_cu_ue_f1ap_id = 1;
    {PROTOBUF_FIELD_OFFSET(UEIDs, _impl_.gnb_cu_ue_f1ap_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 amf_ue_ngap_id = 2;
    {PROTOBUF_FIELD_OFFSET(UEIDs, _impl_.amf_ue_ngap_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 gnb_cu_cp_ue_e1ap_id = 3;
    {PROTOBUF_FIELD_OFFSET(UEIDs, _impl_.gnb_cu_cp_ue_e1ap_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 ran_ue_id = 4;
    {PROTOBUF_FIELD_OFFSET(UEIDs, _impl_.ran_ue_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void UEIDs::Clear() {
// @@protoc_insertion_point(message_clear_start:xapp.UEIDs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.gnb_cu_ue_f1ap_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.gnb_cu_cp_ue_e1ap_id_) -
      reinterpret_cast<char*>(&_impl_.gnb_cu_ue_f1ap_id_)) + sizeof(_impl_.gnb_cu_cp_ue_e1ap_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* UEIDs::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xapp.UEIDs)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 gnb_cu_ue_f1ap_id = 1;
  if (this->_internal_gnb_cu_ue_f1ap_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_gnb_cu_ue_f1ap_id(), target);
  }

  // uint64 amf_ue_ngap_id = 2;
  if (this->_internal_amf_ue_ngap_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_amf_ue_ngap_id(), target);
  }

  // uint32 gnb_cu_cp_ue_e1ap_id = 3;
  if (this->_internal_gnb_cu_cp_ue_e1ap_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_gnb_cu_cp_ue_e1ap_id(), target);
  }

  // uint64 ran_ue_id = 4;
  if (this->_internal_ran_ue_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_ran_ue_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xapp.UEIDs)
  return target;
}

::size_t UEIDs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xapp.UEIDs)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // uint64 gnb_cu_ue_f1ap_id = 1;
  if (this->_internal_gnb_cu_ue_f1ap_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_gnb_cu_ue_f1ap_id());
  }

  // uint64 amf_ue_ngap_id = 2;
  if (this->_internal_amf_ue_ngap_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_amf_ue_ngap_id());
  }

  // uint64 ran_ue_id = 4;
  if (this->_internal_ran_ue_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_ran_ue_id());
  }

  // uint32 gnb_cu_cp_ue_e1ap_id = 3;
  if (this->_internal_gnb_cu_cp_ue_e1ap_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_gnb_cu_cp_ue_e1ap_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UEIDs::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UEIDs*>(&to_msg);
  auto& from = static_cast<const UEIDs&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xapp.UEIDs)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_gnb_cu_ue_f1ap_id() != 0) {
    _this->_impl_.gnb_cu_ue_f1ap_id_ = from._impl_.gnb_cu_ue_f1ap_id_;
  }
  if (from._internal_amf_ue_ngap_id() != 0) {
    _this->_impl_.amf_ue_ngap_id_ = from._impl_.amf_ue_ngap_id_;
  }
  if (from._internal_ran_ue_id() != 0) {
    _this->_impl_.ran_ue_id_ = from._impl_.ran_ue_id_;
  }
  if (from._internal_gnb_cu_cp_ue_e1ap_id() != 0) {
    _this->_impl_.gnb_cu_cp_ue_e1ap_id_ = from._impl_.gnb_cu_cp_ue_e1ap_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UEIDs::CopyFrom(const UEIDs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xapp.UEIDs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UEIDs::InternalSwap(UEIDs* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UEIDs, _impl_.gnb_cu_cp_ue_e1ap_id_)
      + sizeof(UEIDs::_impl_.gnb_cu_cp_ue_e1ap_id_)
      - PROTOBUF_FIELD_OFFSET(UEIDs, _impl_.gnb_cu_ue_f1ap_id_)>(
          reinterpret_cast<char*>(&_impl_.gnb_cu_ue_f1ap_id_),
          reinterpret_cast<char*>(&other->_impl_.gnb_cu_ue_f1ap_id_));
}

::google::protobuf::Metadata UEIDs::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Guami_t::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Guami_t>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Guami_t, _impl_._has_bits_);
};

Guami_t::Guami_t(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xapp.Guami_t)
}
inline PROTOBUF_NDEBUG_INLINE Guami_t::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xapp::Guami_t& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Guami_t::Guami_t(
    ::google::protobuf::Arena* arena,
    const Guami_t& from)
    : ::google::protobuf::Message(arena) {
  Guami_t* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.plmn_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::xapp::PlmnId>(
                              arena, *from._impl_.plmn_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, amf_region_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, amf_region_id_),
           offsetof(Impl_, amf_set_id_) -
               offsetof(Impl_, amf_region_id_) +
               sizeof(Impl_::amf_set_id_));

  // @@protoc_insertion_point(copy_constructor:xapp.Guami_t)
}
inline PROTOBUF_NDEBUG_INLINE Guami_t::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Guami_t::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, plmn_),
           0,
           offsetof(Impl_, amf_set_id_) -
               offsetof(Impl_, plmn_) +
               sizeof(Impl_::amf_set_id_));
}
Guami_t::~Guami_t() {
  // @@protoc_insertion_point(destructor:xapp.Guami_t)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Guami_t::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.plmn_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Guami_t::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Guami_t, _impl_._cached_size_),
              false,
          },
          &Guami_t::MergeImpl,
          &Guami_t::kDescriptorMethods,
          &descriptor_table_protobuf_2fxapp_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> Guami_t::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Guami_t, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Guami_t_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xapp::Guami_t>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .xapp.PlmnId plmn = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Guami_t, _impl_.plmn_)}},
    // uint32 amf_region_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Guami_t, _impl_.amf_region_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Guami_t, _impl_.amf_region_id_)}},
    // uint32 amf_set_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Guami_t, _impl_.amf_set_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Guami_t, _impl_.amf_set_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .xapp.PlmnId plmn = 1;
    {PROTOBUF_FIELD_OFFSET(Guami_t, _impl_.plmn_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 amf_region_id = 2;
    {PROTOBUF_FIELD_OFFSET(Guami_t, _impl_.amf_region_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 amf_set_id = 3;
    {PROTOBUF_FIELD_OFFSET(Guami_t, _impl_.amf_set_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xapp::PlmnId>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Guami_t::Clear() {
// @@protoc_insertion_point(message_clear_start:xapp.Guami_t)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.plmn_ != nullptr);
    _impl_.plmn_->Clear();
  }
  ::memset(&_impl_.amf_region_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.amf_set_id_) -
      reinterpret_cast<char*>(&_impl_.amf_region_id_)) + sizeof(_impl_.amf_set_id_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Guami_t::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xapp.Guami_t)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .xapp.PlmnId plmn = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.plmn_, _impl_.plmn_->GetCachedSize(), target, stream);
  }

  // uint32 amf_region_id = 2;
  if (this->_internal_amf_region_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_amf_region_id(), target);
  }

  // uint32 amf_set_id = 3;
  if (this->_internal_amf_set_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_amf_set_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xapp.Guami_t)
  return target;
}

::size_t Guami_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xapp.Guami_t)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .xapp.PlmnId plmn = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.plmn_);
  }

  // uint32 amf_region_id = 2;
  if (this->_internal_amf_region_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_amf_region_id());
  }

  // uint32 amf_set_id = 3;
  if (this->_internal_amf_set_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_amf_set_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Guami_t::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Guami_t*>(&to_msg);
  auto& from = static_cast<const Guami_t&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:xapp.Guami_t)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.plmn_ != nullptr);
    if (_this->_impl_.plmn_ == nullptr) {
      _this->_impl_.plmn_ =
          ::google::protobuf::Message::CopyConstruct<::xapp::PlmnId>(arena, *from._impl_.plmn_);
    } else {
      _this->_impl_.plmn_->MergeFrom(*from._impl_.plmn_);
    }
  }
  if (from._internal_amf_region_id() != 0) {
    _this->_impl_.amf_region_id_ = from._impl_.amf_region_id_;
  }
  if (from._internal_amf_set_id() != 0) {
    _this->_impl_.amf_set_id_ = from._impl_.amf_set_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Guami_t::CopyFrom(const Guami_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xapp.Guami_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Guami_t::InternalSwap(Guami_t* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Guami_t, _impl_.amf_set_id_)
      + sizeof(Guami_t::_impl_.amf_set_id_)
      - PROTOBUF_FIELD_OFFSET(Guami_t, _impl_.plmn_)>(
          reinterpret_cast<char*>(&_impl_.plmn_),
          reinterpret_cast<char*>(&other->_impl_.plmn_));
}

::google::protobuf::Metadata Guami_t::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlmnId::_Internal {
 public:
};

PlmnId::PlmnId(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xapp.PlmnId)
}
PlmnId::PlmnId(
    ::google::protobuf::Arena* arena, const PlmnId& from)
    : PlmnId(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PlmnId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PlmnId::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mcc_),
           0,
           offsetof(Impl_, mnc_digit_len_) -
               offsetof(Impl_, mcc_) +
               sizeof(Impl_::mnc_digit_len_));
}
PlmnId::~PlmnId() {
  // @@protoc_insertion_point(destructor:xapp.PlmnId)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlmnId::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PlmnId::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PlmnId, _impl_._cached_size_),
              false,
          },
          &PlmnId::MergeImpl,
          &PlmnId::kDescriptorMethods,
          &descriptor_table_protobuf_2fxapp_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> PlmnId::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PlmnId_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xapp::PlmnId>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 mcc = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlmnId, _impl_.mcc_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlmnId, _impl_.mcc_)}},
    // uint32 mnc = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlmnId, _impl_.mnc_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PlmnId, _impl_.mnc_)}},
    // uint32 mnc_digit_len = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlmnId, _impl_.mnc_digit_len_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PlmnId, _impl_.mnc_digit_len_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 mcc = 1;
    {PROTOBUF_FIELD_OFFSET(PlmnId, _impl_.mcc_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 mnc = 2;
    {PROTOBUF_FIELD_OFFSET(PlmnId, _impl_.mnc_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 mnc_digit_len = 3;
    {PROTOBUF_FIELD_OFFSET(PlmnId, _impl_.mnc_digit_len_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PlmnId::Clear() {
// @@protoc_insertion_point(message_clear_start:xapp.PlmnId)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.mcc_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.mnc_digit_len_) -
      reinterpret_cast<char*>(&_impl_.mcc_)) + sizeof(_impl_.mnc_digit_len_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PlmnId::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xapp.PlmnId)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 mcc = 1;
  if (this->_internal_mcc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_mcc(), target);
  }

  // uint32 mnc = 2;
  if (this->_internal_mnc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_mnc(), target);
  }

  // uint32 mnc_digit_len = 3;
  if (this->_internal_mnc_digit_len() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_mnc_digit_len(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xapp.PlmnId)
  return target;
}

::size_t PlmnId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xapp.PlmnId)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // uint32 mcc = 1;
  if (this->_internal_mcc() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_mcc());
  }

  // uint32 mnc = 2;
  if (this->_internal_mnc() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_mnc());
  }

  // uint32 mnc_digit_len = 3;
  if (this->_internal_mnc_digit_len() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_mnc_digit_len());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PlmnId::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlmnId*>(&to_msg);
  auto& from = static_cast<const PlmnId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xapp.PlmnId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_mcc() != 0) {
    _this->_impl_.mcc_ = from._impl_.mcc_;
  }
  if (from._internal_mnc() != 0) {
    _this->_impl_.mnc_ = from._impl_.mnc_;
  }
  if (from._internal_mnc_digit_len() != 0) {
    _this->_impl_.mnc_digit_len_ = from._impl_.mnc_digit_len_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlmnId::CopyFrom(const PlmnId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xapp.PlmnId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlmnId::InternalSwap(PlmnId* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlmnId, _impl_.mnc_digit_len_)
      + sizeof(PlmnId::_impl_.mnc_digit_len_)
      - PROTOBUF_FIELD_OFFSET(PlmnId, _impl_.mcc_)>(
          reinterpret_cast<char*>(&_impl_.mcc_),
          reinterpret_cast<char*>(&other->_impl_.mcc_));
}

::google::protobuf::Metadata PlmnId::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MeasInfo::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::xapp::MeasInfo, _impl_._oneof_case_);
};

MeasInfo::MeasInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xapp.MeasInfo)
}
inline PROTOBUF_NDEBUG_INLINE MeasInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xapp::MeasInfo& from_msg)
      : meas_name_(arena, from.meas_name_),
        meas_value_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

MeasInfo::MeasInfo(
    ::google::protobuf::Arena* arena,
    const MeasInfo& from)
    : ::google::protobuf::Message(arena) {
  MeasInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (meas_value_case()) {
    case MEAS_VALUE_NOT_SET:
      break;
      case kIntValue:
        _impl_.meas_value_.int_value_ = from._impl_.meas_value_.int_value_;
        break;
      case kRealValue:
        _impl_.meas_value_.real_value_ = from._impl_.meas_value_.real_value_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:xapp.MeasInfo)
}
inline PROTOBUF_NDEBUG_INLINE MeasInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : meas_name_(arena),
        meas_value_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void MeasInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MeasInfo::~MeasInfo() {
  // @@protoc_insertion_point(destructor:xapp.MeasInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MeasInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.meas_name_.Destroy();
  if (has_meas_value()) {
    clear_meas_value();
  }
  _impl_.~Impl_();
}

void MeasInfo::clear_meas_value() {
// @@protoc_insertion_point(one_of_clear_start:xapp.MeasInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (meas_value_case()) {
    case kIntValue: {
      // No need to clear
      break;
    }
    case kRealValue: {
      // No need to clear
      break;
    }
    case MEAS_VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MEAS_VALUE_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
MeasInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(MeasInfo, _impl_._cached_size_),
              false,
          },
          &MeasInfo::MergeImpl,
          &MeasInfo::kDescriptorMethods,
          &descriptor_table_protobuf_2fxapp_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 0, 31, 2> MeasInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MeasInfo_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xapp::MeasInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string meas_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MeasInfo, _impl_.meas_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string meas_name = 1;
    {PROTOBUF_FIELD_OFFSET(MeasInfo, _impl_.meas_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 int_value = 2;
    {PROTOBUF_FIELD_OFFSET(MeasInfo, _impl_.meas_value_.int_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt64)},
    // double real_value = 3;
    {PROTOBUF_FIELD_OFFSET(MeasInfo, _impl_.meas_value_.real_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\15\11\0\0\0\0\0\0"
    "xapp.MeasInfo"
    "meas_name"
  }},
};

PROTOBUF_NOINLINE void MeasInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:xapp.MeasInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.meas_name_.ClearToEmpty();
  clear_meas_value();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* MeasInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xapp.MeasInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string meas_name = 1;
  if (!this->_internal_meas_name().empty()) {
    const std::string& _s = this->_internal_meas_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xapp.MeasInfo.meas_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  switch (meas_value_case()) {
    case kIntValue: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          2, this->_internal_int_value(), target);
      break;
    }
    case kRealValue: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this->_internal_real_value(), target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xapp.MeasInfo)
  return target;
}

::size_t MeasInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xapp.MeasInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string meas_name = 1;
  if (!this->_internal_meas_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_meas_name());
  }

  switch (meas_value_case()) {
    // uint64 int_value = 2;
    case kIntValue: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_int_value());
      break;
    }
    // double real_value = 3;
    case kRealValue: {
      total_size += 9;
      break;
    }
    case MEAS_VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void MeasInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MeasInfo*>(&to_msg);
  auto& from = static_cast<const MeasInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xapp.MeasInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_meas_name().empty()) {
    _this->_internal_set_meas_name(from._internal_meas_name());
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_meas_value();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kIntValue: {
        _this->_impl_.meas_value_.int_value_ = from._impl_.meas_value_.int_value_;
        break;
      }
      case kRealValue: {
        _this->_impl_.meas_value_.real_value_ = from._impl_.meas_value_.real_value_;
        break;
      }
      case MEAS_VALUE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MeasInfo::CopyFrom(const MeasInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xapp.MeasInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MeasInfo::InternalSwap(MeasInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.meas_name_, &other->_impl_.meas_name_, arena);
  swap(_impl_.meas_value_, other->_impl_.meas_value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata MeasInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace xapp
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_protobuf_2fxapp_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
