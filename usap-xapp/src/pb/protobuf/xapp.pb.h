// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protobuf/xapp.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_protobuf_2fxapp_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_protobuf_2fxapp_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_protobuf_2fxapp_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_protobuf_2fxapp_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_protobuf_2fxapp_2eproto;
namespace xapp {
class E2NodeInfos;
struct E2NodeInfosDefaultTypeInternal;
extern E2NodeInfosDefaultTypeInternal _E2NodeInfos_default_instance_;
class Guami_t;
struct Guami_tDefaultTypeInternal;
extern Guami_tDefaultTypeInternal _Guami_t_default_instance_;
class KPMIndicationRequest;
struct KPMIndicationRequestDefaultTypeInternal;
extern KPMIndicationRequestDefaultTypeInternal _KPMIndicationRequest_default_instance_;
class KPMIndicationResponse;
struct KPMIndicationResponseDefaultTypeInternal;
extern KPMIndicationResponseDefaultTypeInternal _KPMIndicationResponse_default_instance_;
class MeasInfo;
struct MeasInfoDefaultTypeInternal;
extern MeasInfoDefaultTypeInternal _MeasInfo_default_instance_;
class PlmnId;
struct PlmnIdDefaultTypeInternal;
extern PlmnIdDefaultTypeInternal _PlmnId_default_instance_;
class UEIDs;
struct UEIDsDefaultTypeInternal;
extern UEIDsDefaultTypeInternal _UEIDs_default_instance_;
class UEInfos;
struct UEInfosDefaultTypeInternal;
extern UEInfosDefaultTypeInternal _UEInfos_default_instance_;
}  // namespace xapp
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace xapp {

// ===================================================================


// -------------------------------------------------------------------

class UEIDs final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xapp.UEIDs) */ {
 public:
  inline UEIDs() : UEIDs(nullptr) {}
  ~UEIDs() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UEIDs(
      ::google::protobuf::internal::ConstantInitialized);

  inline UEIDs(const UEIDs& from) : UEIDs(nullptr, from) {}
  inline UEIDs(UEIDs&& from) noexcept
      : UEIDs(nullptr, std::move(from)) {}
  inline UEIDs& operator=(const UEIDs& from) {
    CopyFrom(from);
    return *this;
  }
  inline UEIDs& operator=(UEIDs&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UEIDs& default_instance() {
    return *internal_default_instance();
  }
  static inline const UEIDs* internal_default_instance() {
    return reinterpret_cast<const UEIDs*>(
        &_UEIDs_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(UEIDs& a, UEIDs& b) { a.Swap(&b); }
  inline void Swap(UEIDs* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UEIDs* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UEIDs* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<UEIDs>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UEIDs& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UEIDs& from) { UEIDs::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UEIDs* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "xapp.UEIDs"; }

 protected:
  explicit UEIDs(::google::protobuf::Arena* arena);
  UEIDs(::google::protobuf::Arena* arena, const UEIDs& from);
  UEIDs(::google::protobuf::Arena* arena, UEIDs&& from) noexcept
      : UEIDs(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGnbCuUeF1ApIdFieldNumber = 1,
    kAmfUeNgapIdFieldNumber = 2,
    kRanUeIdFieldNumber = 4,
    kGnbCuCpUeE1ApIdFieldNumber = 3,
  };
  // uint64 gnb_cu_ue_f1ap_id = 1;
  void clear_gnb_cu_ue_f1ap_id() ;
  ::uint64_t gnb_cu_ue_f1ap_id() const;
  void set_gnb_cu_ue_f1ap_id(::uint64_t value);

  private:
  ::uint64_t _internal_gnb_cu_ue_f1ap_id() const;
  void _internal_set_gnb_cu_ue_f1ap_id(::uint64_t value);

  public:
  // uint64 amf_ue_ngap_id = 2;
  void clear_amf_ue_ngap_id() ;
  ::uint64_t amf_ue_ngap_id() const;
  void set_amf_ue_ngap_id(::uint64_t value);

  private:
  ::uint64_t _internal_amf_ue_ngap_id() const;
  void _internal_set_amf_ue_ngap_id(::uint64_t value);

  public:
  // uint64 ran_ue_id = 4;
  void clear_ran_ue_id() ;
  ::uint64_t ran_ue_id() const;
  void set_ran_ue_id(::uint64_t value);

  private:
  ::uint64_t _internal_ran_ue_id() const;
  void _internal_set_ran_ue_id(::uint64_t value);

  public:
  // uint32 gnb_cu_cp_ue_e1ap_id = 3;
  void clear_gnb_cu_cp_ue_e1ap_id() ;
  ::uint32_t gnb_cu_cp_ue_e1ap_id() const;
  void set_gnb_cu_cp_ue_e1ap_id(::uint32_t value);

  private:
  ::uint32_t _internal_gnb_cu_cp_ue_e1ap_id() const;
  void _internal_set_gnb_cu_cp_ue_e1ap_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:xapp.UEIDs)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UEIDs_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UEIDs& from_msg);
    ::uint64_t gnb_cu_ue_f1ap_id_;
    ::uint64_t amf_ue_ngap_id_;
    ::uint64_t ran_ue_id_;
    ::uint32_t gnb_cu_cp_ue_e1ap_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protobuf_2fxapp_2eproto;
};
// -------------------------------------------------------------------

class PlmnId final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xapp.PlmnId) */ {
 public:
  inline PlmnId() : PlmnId(nullptr) {}
  ~PlmnId() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlmnId(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlmnId(const PlmnId& from) : PlmnId(nullptr, from) {}
  inline PlmnId(PlmnId&& from) noexcept
      : PlmnId(nullptr, std::move(from)) {}
  inline PlmnId& operator=(const PlmnId& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlmnId& operator=(PlmnId&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlmnId& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlmnId* internal_default_instance() {
    return reinterpret_cast<const PlmnId*>(
        &_PlmnId_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(PlmnId& a, PlmnId& b) { a.Swap(&b); }
  inline void Swap(PlmnId* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlmnId* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlmnId* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PlmnId>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlmnId& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlmnId& from) { PlmnId::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PlmnId* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "xapp.PlmnId"; }

 protected:
  explicit PlmnId(::google::protobuf::Arena* arena);
  PlmnId(::google::protobuf::Arena* arena, const PlmnId& from);
  PlmnId(::google::protobuf::Arena* arena, PlmnId&& from) noexcept
      : PlmnId(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMccFieldNumber = 1,
    kMncFieldNumber = 2,
    kMncDigitLenFieldNumber = 3,
  };
  // uint32 mcc = 1;
  void clear_mcc() ;
  ::uint32_t mcc() const;
  void set_mcc(::uint32_t value);

  private:
  ::uint32_t _internal_mcc() const;
  void _internal_set_mcc(::uint32_t value);

  public:
  // uint32 mnc = 2;
  void clear_mnc() ;
  ::uint32_t mnc() const;
  void set_mnc(::uint32_t value);

  private:
  ::uint32_t _internal_mnc() const;
  void _internal_set_mnc(::uint32_t value);

  public:
  // uint32 mnc_digit_len = 3;
  void clear_mnc_digit_len() ;
  ::uint32_t mnc_digit_len() const;
  void set_mnc_digit_len(::uint32_t value);

  private:
  ::uint32_t _internal_mnc_digit_len() const;
  void _internal_set_mnc_digit_len(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:xapp.PlmnId)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PlmnId_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlmnId& from_msg);
    ::uint32_t mcc_;
    ::uint32_t mnc_;
    ::uint32_t mnc_digit_len_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protobuf_2fxapp_2eproto;
};
// -------------------------------------------------------------------

class MeasInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xapp.MeasInfo) */ {
 public:
  inline MeasInfo() : MeasInfo(nullptr) {}
  ~MeasInfo() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MeasInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline MeasInfo(const MeasInfo& from) : MeasInfo(nullptr, from) {}
  inline MeasInfo(MeasInfo&& from) noexcept
      : MeasInfo(nullptr, std::move(from)) {}
  inline MeasInfo& operator=(const MeasInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MeasInfo& operator=(MeasInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MeasInfo& default_instance() {
    return *internal_default_instance();
  }
  enum MeasValueCase {
    kIntValue = 2,
    kRealValue = 3,
    MEAS_VALUE_NOT_SET = 0,
  };
  static inline const MeasInfo* internal_default_instance() {
    return reinterpret_cast<const MeasInfo*>(
        &_MeasInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(MeasInfo& a, MeasInfo& b) { a.Swap(&b); }
  inline void Swap(MeasInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MeasInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MeasInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<MeasInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MeasInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MeasInfo& from) { MeasInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MeasInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "xapp.MeasInfo"; }

 protected:
  explicit MeasInfo(::google::protobuf::Arena* arena);
  MeasInfo(::google::protobuf::Arena* arena, const MeasInfo& from);
  MeasInfo(::google::protobuf::Arena* arena, MeasInfo&& from) noexcept
      : MeasInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMeasNameFieldNumber = 1,
    kIntValueFieldNumber = 2,
    kRealValueFieldNumber = 3,
  };
  // string meas_name = 1;
  void clear_meas_name() ;
  const std::string& meas_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_meas_name(Arg_&& arg, Args_... args);
  std::string* mutable_meas_name();
  PROTOBUF_NODISCARD std::string* release_meas_name();
  void set_allocated_meas_name(std::string* value);

  private:
  const std::string& _internal_meas_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_meas_name(
      const std::string& value);
  std::string* _internal_mutable_meas_name();

  public:
  // uint64 int_value = 2;
  bool has_int_value() const;
  void clear_int_value() ;
  ::uint64_t int_value() const;
  void set_int_value(::uint64_t value);

  private:
  ::uint64_t _internal_int_value() const;
  void _internal_set_int_value(::uint64_t value);

  public:
  // double real_value = 3;
  bool has_real_value() const;
  void clear_real_value() ;
  double real_value() const;
  void set_real_value(double value);

  private:
  double _internal_real_value() const;
  void _internal_set_real_value(double value);

  public:
  void clear_meas_value();
  MeasValueCase meas_value_case() const;
  // @@protoc_insertion_point(class_scope:xapp.MeasInfo)
 private:
  class _Internal;
  void set_has_int_value();
  void set_has_real_value();
  inline bool has_meas_value() const;
  inline void clear_has_meas_value();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 0,
      31, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MeasInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MeasInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr meas_name_;
    union MeasValueUnion {
      constexpr MeasValueUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::uint64_t int_value_;
      double real_value_;
    } meas_value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protobuf_2fxapp_2eproto;
};
// -------------------------------------------------------------------

class KPMIndicationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xapp.KPMIndicationRequest) */ {
 public:
  inline KPMIndicationRequest() : KPMIndicationRequest(nullptr) {}
  ~KPMIndicationRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR KPMIndicationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline KPMIndicationRequest(const KPMIndicationRequest& from) : KPMIndicationRequest(nullptr, from) {}
  inline KPMIndicationRequest(KPMIndicationRequest&& from) noexcept
      : KPMIndicationRequest(nullptr, std::move(from)) {}
  inline KPMIndicationRequest& operator=(const KPMIndicationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline KPMIndicationRequest& operator=(KPMIndicationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KPMIndicationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const KPMIndicationRequest* internal_default_instance() {
    return reinterpret_cast<const KPMIndicationRequest*>(
        &_KPMIndicationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(KPMIndicationRequest& a, KPMIndicationRequest& b) { a.Swap(&b); }
  inline void Swap(KPMIndicationRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KPMIndicationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KPMIndicationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<KPMIndicationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const KPMIndicationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const KPMIndicationRequest& from) { KPMIndicationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(KPMIndicationRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "xapp.KPMIndicationRequest"; }

 protected:
  explicit KPMIndicationRequest(::google::protobuf::Arena* arena);
  KPMIndicationRequest(::google::protobuf::Arena* arena, const KPMIndicationRequest& from);
  KPMIndicationRequest(::google::protobuf::Arena* arena, KPMIndicationRequest&& from) noexcept
      : KPMIndicationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSvcNameFieldNumber = 1,
  };
  // string svc_name = 1;
  void clear_svc_name() ;
  const std::string& svc_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_svc_name(Arg_&& arg, Args_... args);
  std::string* mutable_svc_name();
  PROTOBUF_NODISCARD std::string* release_svc_name();
  void set_allocated_svc_name(std::string* value);

  private:
  const std::string& _internal_svc_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_svc_name(
      const std::string& value);
  std::string* _internal_mutable_svc_name();

  public:
  // @@protoc_insertion_point(class_scope:xapp.KPMIndicationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      42, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_KPMIndicationRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const KPMIndicationRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr svc_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protobuf_2fxapp_2eproto;
};
// -------------------------------------------------------------------

class E2NodeInfos final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xapp.E2NodeInfos) */ {
 public:
  inline E2NodeInfos() : E2NodeInfos(nullptr) {}
  ~E2NodeInfos() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR E2NodeInfos(
      ::google::protobuf::internal::ConstantInitialized);

  inline E2NodeInfos(const E2NodeInfos& from) : E2NodeInfos(nullptr, from) {}
  inline E2NodeInfos(E2NodeInfos&& from) noexcept
      : E2NodeInfos(nullptr, std::move(from)) {}
  inline E2NodeInfos& operator=(const E2NodeInfos& from) {
    CopyFrom(from);
    return *this;
  }
  inline E2NodeInfos& operator=(E2NodeInfos&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const E2NodeInfos& default_instance() {
    return *internal_default_instance();
  }
  static inline const E2NodeInfos* internal_default_instance() {
    return reinterpret_cast<const E2NodeInfos*>(
        &_E2NodeInfos_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(E2NodeInfos& a, E2NodeInfos& b) { a.Swap(&b); }
  inline void Swap(E2NodeInfos* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(E2NodeInfos* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  E2NodeInfos* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<E2NodeInfos>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const E2NodeInfos& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const E2NodeInfos& from) { E2NodeInfos::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(E2NodeInfos* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "xapp.E2NodeInfos"; }

 protected:
  explicit E2NodeInfos(::google::protobuf::Arena* arena);
  E2NodeInfos(::google::protobuf::Arena* arena, const E2NodeInfos& from);
  E2NodeInfos(::google::protobuf::Arena* arena, E2NodeInfos&& from) noexcept
      : E2NodeInfos(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodeTypeNameFieldNumber = 2,
    kNodebIdFieldNumber = 1,
    kMccFieldNumber = 3,
    kMncFieldNumber = 4,
    kMncDigitLenFieldNumber = 5,
    kCuDuIdFieldNumber = 6,
  };
  // string node_type_name = 2;
  void clear_node_type_name() ;
  const std::string& node_type_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_node_type_name(Arg_&& arg, Args_... args);
  std::string* mutable_node_type_name();
  PROTOBUF_NODISCARD std::string* release_node_type_name();
  void set_allocated_node_type_name(std::string* value);

  private:
  const std::string& _internal_node_type_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_node_type_name(
      const std::string& value);
  std::string* _internal_mutable_node_type_name();

  public:
  // uint32 nodeb_id = 1;
  void clear_nodeb_id() ;
  ::uint32_t nodeb_id() const;
  void set_nodeb_id(::uint32_t value);

  private:
  ::uint32_t _internal_nodeb_id() const;
  void _internal_set_nodeb_id(::uint32_t value);

  public:
  // uint32 mcc = 3;
  void clear_mcc() ;
  ::uint32_t mcc() const;
  void set_mcc(::uint32_t value);

  private:
  ::uint32_t _internal_mcc() const;
  void _internal_set_mcc(::uint32_t value);

  public:
  // uint32 mnc = 4;
  void clear_mnc() ;
  ::uint32_t mnc() const;
  void set_mnc(::uint32_t value);

  private:
  ::uint32_t _internal_mnc() const;
  void _internal_set_mnc(::uint32_t value);

  public:
  // uint32 mnc_digit_len = 5;
  void clear_mnc_digit_len() ;
  ::uint32_t mnc_digit_len() const;
  void set_mnc_digit_len(::uint32_t value);

  private:
  ::uint32_t _internal_mnc_digit_len() const;
  void _internal_set_mnc_digit_len(::uint32_t value);

  public:
  // optional uint32 cu_du_id = 6;
  bool has_cu_du_id() const;
  void clear_cu_du_id() ;
  ::uint32_t cu_du_id() const;
  void set_cu_du_id(::uint32_t value);

  private:
  ::uint32_t _internal_cu_du_id() const;
  void _internal_set_cu_du_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:xapp.E2NodeInfos)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      39, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_E2NodeInfos_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const E2NodeInfos& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr node_type_name_;
    ::uint32_t nodeb_id_;
    ::uint32_t mcc_;
    ::uint32_t mnc_;
    ::uint32_t mnc_digit_len_;
    ::uint32_t cu_du_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protobuf_2fxapp_2eproto;
};
// -------------------------------------------------------------------

class UEInfos final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xapp.UEInfos) */ {
 public:
  inline UEInfos() : UEInfos(nullptr) {}
  ~UEInfos() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UEInfos(
      ::google::protobuf::internal::ConstantInitialized);

  inline UEInfos(const UEInfos& from) : UEInfos(nullptr, from) {}
  inline UEInfos(UEInfos&& from) noexcept
      : UEInfos(nullptr, std::move(from)) {}
  inline UEInfos& operator=(const UEInfos& from) {
    CopyFrom(from);
    return *this;
  }
  inline UEInfos& operator=(UEInfos&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UEInfos& default_instance() {
    return *internal_default_instance();
  }
  static inline const UEInfos* internal_default_instance() {
    return reinterpret_cast<const UEInfos*>(
        &_UEInfos_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(UEInfos& a, UEInfos& b) { a.Swap(&b); }
  inline void Swap(UEInfos* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UEInfos* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UEInfos* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<UEInfos>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UEInfos& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UEInfos& from) { UEInfos::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UEInfos* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "xapp.UEInfos"; }

 protected:
  explicit UEInfos(::google::protobuf::Arena* arena);
  UEInfos(::google::protobuf::Arena* arena, const UEInfos& from);
  UEInfos(::google::protobuf::Arena* arena, UEInfos&& from) noexcept
      : UEInfos(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUeMeasInfoFieldNumber = 2,
    kUeIdFieldNumber = 1,
  };
  // repeated .xapp.MeasInfo ue_meas_info = 2;
  int ue_meas_info_size() const;
  private:
  int _internal_ue_meas_info_size() const;

  public:
  void clear_ue_meas_info() ;
  ::xapp::MeasInfo* mutable_ue_meas_info(int index);
  ::google::protobuf::RepeatedPtrField<::xapp::MeasInfo>* mutable_ue_meas_info();

  private:
  const ::google::protobuf::RepeatedPtrField<::xapp::MeasInfo>& _internal_ue_meas_info() const;
  ::google::protobuf::RepeatedPtrField<::xapp::MeasInfo>* _internal_mutable_ue_meas_info();
  public:
  const ::xapp::MeasInfo& ue_meas_info(int index) const;
  ::xapp::MeasInfo* add_ue_meas_info();
  const ::google::protobuf::RepeatedPtrField<::xapp::MeasInfo>& ue_meas_info() const;
  // .xapp.UEIDs ue_id = 1;
  bool has_ue_id() const;
  void clear_ue_id() ;
  const ::xapp::UEIDs& ue_id() const;
  PROTOBUF_NODISCARD ::xapp::UEIDs* release_ue_id();
  ::xapp::UEIDs* mutable_ue_id();
  void set_allocated_ue_id(::xapp::UEIDs* value);
  void unsafe_arena_set_allocated_ue_id(::xapp::UEIDs* value);
  ::xapp::UEIDs* unsafe_arena_release_ue_id();

  private:
  const ::xapp::UEIDs& _internal_ue_id() const;
  ::xapp::UEIDs* _internal_mutable_ue_id();

  public:
  // @@protoc_insertion_point(class_scope:xapp.UEInfos)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UEInfos_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UEInfos& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::xapp::MeasInfo > ue_meas_info_;
    ::xapp::UEIDs* ue_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protobuf_2fxapp_2eproto;
};
// -------------------------------------------------------------------

class Guami_t final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xapp.Guami_t) */ {
 public:
  inline Guami_t() : Guami_t(nullptr) {}
  ~Guami_t() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Guami_t(
      ::google::protobuf::internal::ConstantInitialized);

  inline Guami_t(const Guami_t& from) : Guami_t(nullptr, from) {}
  inline Guami_t(Guami_t&& from) noexcept
      : Guami_t(nullptr, std::move(from)) {}
  inline Guami_t& operator=(const Guami_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline Guami_t& operator=(Guami_t&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Guami_t& default_instance() {
    return *internal_default_instance();
  }
  static inline const Guami_t* internal_default_instance() {
    return reinterpret_cast<const Guami_t*>(
        &_Guami_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(Guami_t& a, Guami_t& b) { a.Swap(&b); }
  inline void Swap(Guami_t* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Guami_t* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Guami_t* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Guami_t>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Guami_t& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Guami_t& from) { Guami_t::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Guami_t* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "xapp.Guami_t"; }

 protected:
  explicit Guami_t(::google::protobuf::Arena* arena);
  Guami_t(::google::protobuf::Arena* arena, const Guami_t& from);
  Guami_t(::google::protobuf::Arena* arena, Guami_t&& from) noexcept
      : Guami_t(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlmnFieldNumber = 1,
    kAmfRegionIdFieldNumber = 2,
    kAmfSetIdFieldNumber = 3,
  };
  // .xapp.PlmnId plmn = 1;
  bool has_plmn() const;
  void clear_plmn() ;
  const ::xapp::PlmnId& plmn() const;
  PROTOBUF_NODISCARD ::xapp::PlmnId* release_plmn();
  ::xapp::PlmnId* mutable_plmn();
  void set_allocated_plmn(::xapp::PlmnId* value);
  void unsafe_arena_set_allocated_plmn(::xapp::PlmnId* value);
  ::xapp::PlmnId* unsafe_arena_release_plmn();

  private:
  const ::xapp::PlmnId& _internal_plmn() const;
  ::xapp::PlmnId* _internal_mutable_plmn();

  public:
  // uint32 amf_region_id = 2;
  void clear_amf_region_id() ;
  ::uint32_t amf_region_id() const;
  void set_amf_region_id(::uint32_t value);

  private:
  ::uint32_t _internal_amf_region_id() const;
  void _internal_set_amf_region_id(::uint32_t value);

  public:
  // uint32 amf_set_id = 3;
  void clear_amf_set_id() ;
  ::uint32_t amf_set_id() const;
  void set_amf_set_id(::uint32_t value);

  private:
  ::uint32_t _internal_amf_set_id() const;
  void _internal_set_amf_set_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:xapp.Guami_t)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Guami_t_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Guami_t& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::xapp::PlmnId* plmn_;
    ::uint32_t amf_region_id_;
    ::uint32_t amf_set_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protobuf_2fxapp_2eproto;
};
// -------------------------------------------------------------------

class KPMIndicationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xapp.KPMIndicationResponse) */ {
 public:
  inline KPMIndicationResponse() : KPMIndicationResponse(nullptr) {}
  ~KPMIndicationResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR KPMIndicationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline KPMIndicationResponse(const KPMIndicationResponse& from) : KPMIndicationResponse(nullptr, from) {}
  inline KPMIndicationResponse(KPMIndicationResponse&& from) noexcept
      : KPMIndicationResponse(nullptr, std::move(from)) {}
  inline KPMIndicationResponse& operator=(const KPMIndicationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline KPMIndicationResponse& operator=(KPMIndicationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KPMIndicationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const KPMIndicationResponse* internal_default_instance() {
    return reinterpret_cast<const KPMIndicationResponse*>(
        &_KPMIndicationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(KPMIndicationResponse& a, KPMIndicationResponse& b) { a.Swap(&b); }
  inline void Swap(KPMIndicationResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KPMIndicationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KPMIndicationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<KPMIndicationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const KPMIndicationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const KPMIndicationResponse& from) { KPMIndicationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(KPMIndicationResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "xapp.KPMIndicationResponse"; }

 protected:
  explicit KPMIndicationResponse(::google::protobuf::Arena* arena);
  KPMIndicationResponse(::google::protobuf::Arena* arena, const KPMIndicationResponse& from);
  KPMIndicationResponse(::google::protobuf::Arena* arena, KPMIndicationResponse&& from) noexcept
      : KPMIndicationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUeFieldNumber = 2,
    kLatencyFieldNumber = 1,
  };
  // .xapp.UEInfos ue = 2;
  bool has_ue() const;
  void clear_ue() ;
  const ::xapp::UEInfos& ue() const;
  PROTOBUF_NODISCARD ::xapp::UEInfos* release_ue();
  ::xapp::UEInfos* mutable_ue();
  void set_allocated_ue(::xapp::UEInfos* value);
  void unsafe_arena_set_allocated_ue(::xapp::UEInfos* value);
  ::xapp::UEInfos* unsafe_arena_release_ue();

  private:
  const ::xapp::UEInfos& _internal_ue() const;
  ::xapp::UEInfos* _internal_mutable_ue();

  public:
  // float latency = 1;
  void clear_latency() ;
  float latency() const;
  void set_latency(float value);

  private:
  float _internal_latency() const;
  void _internal_set_latency(float value);

  public:
  // @@protoc_insertion_point(class_scope:xapp.KPMIndicationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_KPMIndicationResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const KPMIndicationResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::xapp::UEInfos* ue_;
    float latency_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protobuf_2fxapp_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// KPMIndicationRequest

// string svc_name = 1;
inline void KPMIndicationRequest::clear_svc_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.svc_name_.ClearToEmpty();
}
inline const std::string& KPMIndicationRequest::svc_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xapp.KPMIndicationRequest.svc_name)
  return _internal_svc_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void KPMIndicationRequest::set_svc_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.svc_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xapp.KPMIndicationRequest.svc_name)
}
inline std::string* KPMIndicationRequest::mutable_svc_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_svc_name();
  // @@protoc_insertion_point(field_mutable:xapp.KPMIndicationRequest.svc_name)
  return _s;
}
inline const std::string& KPMIndicationRequest::_internal_svc_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.svc_name_.Get();
}
inline void KPMIndicationRequest::_internal_set_svc_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.svc_name_.Set(value, GetArena());
}
inline std::string* KPMIndicationRequest::_internal_mutable_svc_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.svc_name_.Mutable( GetArena());
}
inline std::string* KPMIndicationRequest::release_svc_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xapp.KPMIndicationRequest.svc_name)
  return _impl_.svc_name_.Release();
}
inline void KPMIndicationRequest::set_allocated_svc_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.svc_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.svc_name_.IsDefault()) {
          _impl_.svc_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xapp.KPMIndicationRequest.svc_name)
}

// -------------------------------------------------------------------

// KPMIndicationResponse

// float latency = 1;
inline void KPMIndicationResponse::clear_latency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latency_ = 0;
}
inline float KPMIndicationResponse::latency() const {
  // @@protoc_insertion_point(field_get:xapp.KPMIndicationResponse.latency)
  return _internal_latency();
}
inline void KPMIndicationResponse::set_latency(float value) {
  _internal_set_latency(value);
  // @@protoc_insertion_point(field_set:xapp.KPMIndicationResponse.latency)
}
inline float KPMIndicationResponse::_internal_latency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latency_;
}
inline void KPMIndicationResponse::_internal_set_latency(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latency_ = value;
}

// .xapp.UEInfos ue = 2;
inline bool KPMIndicationResponse::has_ue() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ue_ != nullptr);
  return value;
}
inline void KPMIndicationResponse::clear_ue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ue_ != nullptr) _impl_.ue_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::xapp::UEInfos& KPMIndicationResponse::_internal_ue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xapp::UEInfos* p = _impl_.ue_;
  return p != nullptr ? *p : reinterpret_cast<const ::xapp::UEInfos&>(::xapp::_UEInfos_default_instance_);
}
inline const ::xapp::UEInfos& KPMIndicationResponse::ue() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xapp.KPMIndicationResponse.ue)
  return _internal_ue();
}
inline void KPMIndicationResponse::unsafe_arena_set_allocated_ue(::xapp::UEInfos* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ue_);
  }
  _impl_.ue_ = reinterpret_cast<::xapp::UEInfos*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xapp.KPMIndicationResponse.ue)
}
inline ::xapp::UEInfos* KPMIndicationResponse::release_ue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xapp::UEInfos* released = _impl_.ue_;
  _impl_.ue_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::xapp::UEInfos* KPMIndicationResponse::unsafe_arena_release_ue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xapp.KPMIndicationResponse.ue)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xapp::UEInfos* temp = _impl_.ue_;
  _impl_.ue_ = nullptr;
  return temp;
}
inline ::xapp::UEInfos* KPMIndicationResponse::_internal_mutable_ue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ue_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xapp::UEInfos>(GetArena());
    _impl_.ue_ = reinterpret_cast<::xapp::UEInfos*>(p);
  }
  return _impl_.ue_;
}
inline ::xapp::UEInfos* KPMIndicationResponse::mutable_ue() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::xapp::UEInfos* _msg = _internal_mutable_ue();
  // @@protoc_insertion_point(field_mutable:xapp.KPMIndicationResponse.ue)
  return _msg;
}
inline void KPMIndicationResponse::set_allocated_ue(::xapp::UEInfos* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.ue_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ue_ = reinterpret_cast<::xapp::UEInfos*>(value);
  // @@protoc_insertion_point(field_set_allocated:xapp.KPMIndicationResponse.ue)
}

// -------------------------------------------------------------------

// E2NodeInfos

// uint32 nodeb_id = 1;
inline void E2NodeInfos::clear_nodeb_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nodeb_id_ = 0u;
}
inline ::uint32_t E2NodeInfos::nodeb_id() const {
  // @@protoc_insertion_point(field_get:xapp.E2NodeInfos.nodeb_id)
  return _internal_nodeb_id();
}
inline void E2NodeInfos::set_nodeb_id(::uint32_t value) {
  _internal_set_nodeb_id(value);
  // @@protoc_insertion_point(field_set:xapp.E2NodeInfos.nodeb_id)
}
inline ::uint32_t E2NodeInfos::_internal_nodeb_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nodeb_id_;
}
inline void E2NodeInfos::_internal_set_nodeb_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nodeb_id_ = value;
}

// string node_type_name = 2;
inline void E2NodeInfos::clear_node_type_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_type_name_.ClearToEmpty();
}
inline const std::string& E2NodeInfos::node_type_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xapp.E2NodeInfos.node_type_name)
  return _internal_node_type_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void E2NodeInfos::set_node_type_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_type_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xapp.E2NodeInfos.node_type_name)
}
inline std::string* E2NodeInfos::mutable_node_type_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_node_type_name();
  // @@protoc_insertion_point(field_mutable:xapp.E2NodeInfos.node_type_name)
  return _s;
}
inline const std::string& E2NodeInfos::_internal_node_type_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_type_name_.Get();
}
inline void E2NodeInfos::_internal_set_node_type_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_type_name_.Set(value, GetArena());
}
inline std::string* E2NodeInfos::_internal_mutable_node_type_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.node_type_name_.Mutable( GetArena());
}
inline std::string* E2NodeInfos::release_node_type_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xapp.E2NodeInfos.node_type_name)
  return _impl_.node_type_name_.Release();
}
inline void E2NodeInfos::set_allocated_node_type_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_type_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.node_type_name_.IsDefault()) {
          _impl_.node_type_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xapp.E2NodeInfos.node_type_name)
}

// uint32 mcc = 3;
inline void E2NodeInfos::clear_mcc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mcc_ = 0u;
}
inline ::uint32_t E2NodeInfos::mcc() const {
  // @@protoc_insertion_point(field_get:xapp.E2NodeInfos.mcc)
  return _internal_mcc();
}
inline void E2NodeInfos::set_mcc(::uint32_t value) {
  _internal_set_mcc(value);
  // @@protoc_insertion_point(field_set:xapp.E2NodeInfos.mcc)
}
inline ::uint32_t E2NodeInfos::_internal_mcc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mcc_;
}
inline void E2NodeInfos::_internal_set_mcc(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mcc_ = value;
}

// uint32 mnc = 4;
inline void E2NodeInfos::clear_mnc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mnc_ = 0u;
}
inline ::uint32_t E2NodeInfos::mnc() const {
  // @@protoc_insertion_point(field_get:xapp.E2NodeInfos.mnc)
  return _internal_mnc();
}
inline void E2NodeInfos::set_mnc(::uint32_t value) {
  _internal_set_mnc(value);
  // @@protoc_insertion_point(field_set:xapp.E2NodeInfos.mnc)
}
inline ::uint32_t E2NodeInfos::_internal_mnc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mnc_;
}
inline void E2NodeInfos::_internal_set_mnc(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mnc_ = value;
}

// uint32 mnc_digit_len = 5;
inline void E2NodeInfos::clear_mnc_digit_len() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mnc_digit_len_ = 0u;
}
inline ::uint32_t E2NodeInfos::mnc_digit_len() const {
  // @@protoc_insertion_point(field_get:xapp.E2NodeInfos.mnc_digit_len)
  return _internal_mnc_digit_len();
}
inline void E2NodeInfos::set_mnc_digit_len(::uint32_t value) {
  _internal_set_mnc_digit_len(value);
  // @@protoc_insertion_point(field_set:xapp.E2NodeInfos.mnc_digit_len)
}
inline ::uint32_t E2NodeInfos::_internal_mnc_digit_len() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mnc_digit_len_;
}
inline void E2NodeInfos::_internal_set_mnc_digit_len(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mnc_digit_len_ = value;
}

// optional uint32 cu_du_id = 6;
inline bool E2NodeInfos::has_cu_du_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void E2NodeInfos::clear_cu_du_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cu_du_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t E2NodeInfos::cu_du_id() const {
  // @@protoc_insertion_point(field_get:xapp.E2NodeInfos.cu_du_id)
  return _internal_cu_du_id();
}
inline void E2NodeInfos::set_cu_du_id(::uint32_t value) {
  _internal_set_cu_du_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:xapp.E2NodeInfos.cu_du_id)
}
inline ::uint32_t E2NodeInfos::_internal_cu_du_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cu_du_id_;
}
inline void E2NodeInfos::_internal_set_cu_du_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cu_du_id_ = value;
}

// -------------------------------------------------------------------

// UEInfos

// .xapp.UEIDs ue_id = 1;
inline bool UEInfos::has_ue_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ue_id_ != nullptr);
  return value;
}
inline void UEInfos::clear_ue_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ue_id_ != nullptr) _impl_.ue_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::xapp::UEIDs& UEInfos::_internal_ue_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xapp::UEIDs* p = _impl_.ue_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::xapp::UEIDs&>(::xapp::_UEIDs_default_instance_);
}
inline const ::xapp::UEIDs& UEInfos::ue_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xapp.UEInfos.ue_id)
  return _internal_ue_id();
}
inline void UEInfos::unsafe_arena_set_allocated_ue_id(::xapp::UEIDs* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ue_id_);
  }
  _impl_.ue_id_ = reinterpret_cast<::xapp::UEIDs*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xapp.UEInfos.ue_id)
}
inline ::xapp::UEIDs* UEInfos::release_ue_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xapp::UEIDs* released = _impl_.ue_id_;
  _impl_.ue_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::xapp::UEIDs* UEInfos::unsafe_arena_release_ue_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xapp.UEInfos.ue_id)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xapp::UEIDs* temp = _impl_.ue_id_;
  _impl_.ue_id_ = nullptr;
  return temp;
}
inline ::xapp::UEIDs* UEInfos::_internal_mutable_ue_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ue_id_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xapp::UEIDs>(GetArena());
    _impl_.ue_id_ = reinterpret_cast<::xapp::UEIDs*>(p);
  }
  return _impl_.ue_id_;
}
inline ::xapp::UEIDs* UEInfos::mutable_ue_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::xapp::UEIDs* _msg = _internal_mutable_ue_id();
  // @@protoc_insertion_point(field_mutable:xapp.UEInfos.ue_id)
  return _msg;
}
inline void UEInfos::set_allocated_ue_id(::xapp::UEIDs* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.ue_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ue_id_ = reinterpret_cast<::xapp::UEIDs*>(value);
  // @@protoc_insertion_point(field_set_allocated:xapp.UEInfos.ue_id)
}

// repeated .xapp.MeasInfo ue_meas_info = 2;
inline int UEInfos::_internal_ue_meas_info_size() const {
  return _internal_ue_meas_info().size();
}
inline int UEInfos::ue_meas_info_size() const {
  return _internal_ue_meas_info_size();
}
inline void UEInfos::clear_ue_meas_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ue_meas_info_.Clear();
}
inline ::xapp::MeasInfo* UEInfos::mutable_ue_meas_info(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:xapp.UEInfos.ue_meas_info)
  return _internal_mutable_ue_meas_info()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::xapp::MeasInfo>* UEInfos::mutable_ue_meas_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xapp.UEInfos.ue_meas_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ue_meas_info();
}
inline const ::xapp::MeasInfo& UEInfos::ue_meas_info(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xapp.UEInfos.ue_meas_info)
  return _internal_ue_meas_info().Get(index);
}
inline ::xapp::MeasInfo* UEInfos::add_ue_meas_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::xapp::MeasInfo* _add = _internal_mutable_ue_meas_info()->Add();
  // @@protoc_insertion_point(field_add:xapp.UEInfos.ue_meas_info)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::xapp::MeasInfo>& UEInfos::ue_meas_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xapp.UEInfos.ue_meas_info)
  return _internal_ue_meas_info();
}
inline const ::google::protobuf::RepeatedPtrField<::xapp::MeasInfo>&
UEInfos::_internal_ue_meas_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ue_meas_info_;
}
inline ::google::protobuf::RepeatedPtrField<::xapp::MeasInfo>*
UEInfos::_internal_mutable_ue_meas_info() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ue_meas_info_;
}

// -------------------------------------------------------------------

// UEIDs

// uint64 gnb_cu_ue_f1ap_id = 1;
inline void UEIDs::clear_gnb_cu_ue_f1ap_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gnb_cu_ue_f1ap_id_ = ::uint64_t{0u};
}
inline ::uint64_t UEIDs::gnb_cu_ue_f1ap_id() const {
  // @@protoc_insertion_point(field_get:xapp.UEIDs.gnb_cu_ue_f1ap_id)
  return _internal_gnb_cu_ue_f1ap_id();
}
inline void UEIDs::set_gnb_cu_ue_f1ap_id(::uint64_t value) {
  _internal_set_gnb_cu_ue_f1ap_id(value);
  // @@protoc_insertion_point(field_set:xapp.UEIDs.gnb_cu_ue_f1ap_id)
}
inline ::uint64_t UEIDs::_internal_gnb_cu_ue_f1ap_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gnb_cu_ue_f1ap_id_;
}
inline void UEIDs::_internal_set_gnb_cu_ue_f1ap_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gnb_cu_ue_f1ap_id_ = value;
}

// uint64 amf_ue_ngap_id = 2;
inline void UEIDs::clear_amf_ue_ngap_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amf_ue_ngap_id_ = ::uint64_t{0u};
}
inline ::uint64_t UEIDs::amf_ue_ngap_id() const {
  // @@protoc_insertion_point(field_get:xapp.UEIDs.amf_ue_ngap_id)
  return _internal_amf_ue_ngap_id();
}
inline void UEIDs::set_amf_ue_ngap_id(::uint64_t value) {
  _internal_set_amf_ue_ngap_id(value);
  // @@protoc_insertion_point(field_set:xapp.UEIDs.amf_ue_ngap_id)
}
inline ::uint64_t UEIDs::_internal_amf_ue_ngap_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amf_ue_ngap_id_;
}
inline void UEIDs::_internal_set_amf_ue_ngap_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amf_ue_ngap_id_ = value;
}

// uint32 gnb_cu_cp_ue_e1ap_id = 3;
inline void UEIDs::clear_gnb_cu_cp_ue_e1ap_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gnb_cu_cp_ue_e1ap_id_ = 0u;
}
inline ::uint32_t UEIDs::gnb_cu_cp_ue_e1ap_id() const {
  // @@protoc_insertion_point(field_get:xapp.UEIDs.gnb_cu_cp_ue_e1ap_id)
  return _internal_gnb_cu_cp_ue_e1ap_id();
}
inline void UEIDs::set_gnb_cu_cp_ue_e1ap_id(::uint32_t value) {
  _internal_set_gnb_cu_cp_ue_e1ap_id(value);
  // @@protoc_insertion_point(field_set:xapp.UEIDs.gnb_cu_cp_ue_e1ap_id)
}
inline ::uint32_t UEIDs::_internal_gnb_cu_cp_ue_e1ap_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gnb_cu_cp_ue_e1ap_id_;
}
inline void UEIDs::_internal_set_gnb_cu_cp_ue_e1ap_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gnb_cu_cp_ue_e1ap_id_ = value;
}

// uint64 ran_ue_id = 4;
inline void UEIDs::clear_ran_ue_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ran_ue_id_ = ::uint64_t{0u};
}
inline ::uint64_t UEIDs::ran_ue_id() const {
  // @@protoc_insertion_point(field_get:xapp.UEIDs.ran_ue_id)
  return _internal_ran_ue_id();
}
inline void UEIDs::set_ran_ue_id(::uint64_t value) {
  _internal_set_ran_ue_id(value);
  // @@protoc_insertion_point(field_set:xapp.UEIDs.ran_ue_id)
}
inline ::uint64_t UEIDs::_internal_ran_ue_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ran_ue_id_;
}
inline void UEIDs::_internal_set_ran_ue_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ran_ue_id_ = value;
}

// -------------------------------------------------------------------

// Guami_t

// .xapp.PlmnId plmn = 1;
inline bool Guami_t::has_plmn() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.plmn_ != nullptr);
  return value;
}
inline void Guami_t::clear_plmn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.plmn_ != nullptr) _impl_.plmn_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::xapp::PlmnId& Guami_t::_internal_plmn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xapp::PlmnId* p = _impl_.plmn_;
  return p != nullptr ? *p : reinterpret_cast<const ::xapp::PlmnId&>(::xapp::_PlmnId_default_instance_);
}
inline const ::xapp::PlmnId& Guami_t::plmn() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xapp.Guami_t.plmn)
  return _internal_plmn();
}
inline void Guami_t::unsafe_arena_set_allocated_plmn(::xapp::PlmnId* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.plmn_);
  }
  _impl_.plmn_ = reinterpret_cast<::xapp::PlmnId*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xapp.Guami_t.plmn)
}
inline ::xapp::PlmnId* Guami_t::release_plmn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xapp::PlmnId* released = _impl_.plmn_;
  _impl_.plmn_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::xapp::PlmnId* Guami_t::unsafe_arena_release_plmn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xapp.Guami_t.plmn)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xapp::PlmnId* temp = _impl_.plmn_;
  _impl_.plmn_ = nullptr;
  return temp;
}
inline ::xapp::PlmnId* Guami_t::_internal_mutable_plmn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.plmn_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xapp::PlmnId>(GetArena());
    _impl_.plmn_ = reinterpret_cast<::xapp::PlmnId*>(p);
  }
  return _impl_.plmn_;
}
inline ::xapp::PlmnId* Guami_t::mutable_plmn() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::xapp::PlmnId* _msg = _internal_mutable_plmn();
  // @@protoc_insertion_point(field_mutable:xapp.Guami_t.plmn)
  return _msg;
}
inline void Guami_t::set_allocated_plmn(::xapp::PlmnId* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.plmn_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.plmn_ = reinterpret_cast<::xapp::PlmnId*>(value);
  // @@protoc_insertion_point(field_set_allocated:xapp.Guami_t.plmn)
}

// uint32 amf_region_id = 2;
inline void Guami_t::clear_amf_region_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amf_region_id_ = 0u;
}
inline ::uint32_t Guami_t::amf_region_id() const {
  // @@protoc_insertion_point(field_get:xapp.Guami_t.amf_region_id)
  return _internal_amf_region_id();
}
inline void Guami_t::set_amf_region_id(::uint32_t value) {
  _internal_set_amf_region_id(value);
  // @@protoc_insertion_point(field_set:xapp.Guami_t.amf_region_id)
}
inline ::uint32_t Guami_t::_internal_amf_region_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amf_region_id_;
}
inline void Guami_t::_internal_set_amf_region_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amf_region_id_ = value;
}

// uint32 amf_set_id = 3;
inline void Guami_t::clear_amf_set_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amf_set_id_ = 0u;
}
inline ::uint32_t Guami_t::amf_set_id() const {
  // @@protoc_insertion_point(field_get:xapp.Guami_t.amf_set_id)
  return _internal_amf_set_id();
}
inline void Guami_t::set_amf_set_id(::uint32_t value) {
  _internal_set_amf_set_id(value);
  // @@protoc_insertion_point(field_set:xapp.Guami_t.amf_set_id)
}
inline ::uint32_t Guami_t::_internal_amf_set_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amf_set_id_;
}
inline void Guami_t::_internal_set_amf_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amf_set_id_ = value;
}

// -------------------------------------------------------------------

// PlmnId

// uint32 mcc = 1;
inline void PlmnId::clear_mcc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mcc_ = 0u;
}
inline ::uint32_t PlmnId::mcc() const {
  // @@protoc_insertion_point(field_get:xapp.PlmnId.mcc)
  return _internal_mcc();
}
inline void PlmnId::set_mcc(::uint32_t value) {
  _internal_set_mcc(value);
  // @@protoc_insertion_point(field_set:xapp.PlmnId.mcc)
}
inline ::uint32_t PlmnId::_internal_mcc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mcc_;
}
inline void PlmnId::_internal_set_mcc(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mcc_ = value;
}

// uint32 mnc = 2;
inline void PlmnId::clear_mnc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mnc_ = 0u;
}
inline ::uint32_t PlmnId::mnc() const {
  // @@protoc_insertion_point(field_get:xapp.PlmnId.mnc)
  return _internal_mnc();
}
inline void PlmnId::set_mnc(::uint32_t value) {
  _internal_set_mnc(value);
  // @@protoc_insertion_point(field_set:xapp.PlmnId.mnc)
}
inline ::uint32_t PlmnId::_internal_mnc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mnc_;
}
inline void PlmnId::_internal_set_mnc(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mnc_ = value;
}

// uint32 mnc_digit_len = 3;
inline void PlmnId::clear_mnc_digit_len() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mnc_digit_len_ = 0u;
}
inline ::uint32_t PlmnId::mnc_digit_len() const {
  // @@protoc_insertion_point(field_get:xapp.PlmnId.mnc_digit_len)
  return _internal_mnc_digit_len();
}
inline void PlmnId::set_mnc_digit_len(::uint32_t value) {
  _internal_set_mnc_digit_len(value);
  // @@protoc_insertion_point(field_set:xapp.PlmnId.mnc_digit_len)
}
inline ::uint32_t PlmnId::_internal_mnc_digit_len() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mnc_digit_len_;
}
inline void PlmnId::_internal_set_mnc_digit_len(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mnc_digit_len_ = value;
}

// -------------------------------------------------------------------

// MeasInfo

// string meas_name = 1;
inline void MeasInfo::clear_meas_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.meas_name_.ClearToEmpty();
}
inline const std::string& MeasInfo::meas_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xapp.MeasInfo.meas_name)
  return _internal_meas_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MeasInfo::set_meas_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.meas_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xapp.MeasInfo.meas_name)
}
inline std::string* MeasInfo::mutable_meas_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_meas_name();
  // @@protoc_insertion_point(field_mutable:xapp.MeasInfo.meas_name)
  return _s;
}
inline const std::string& MeasInfo::_internal_meas_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.meas_name_.Get();
}
inline void MeasInfo::_internal_set_meas_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.meas_name_.Set(value, GetArena());
}
inline std::string* MeasInfo::_internal_mutable_meas_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.meas_name_.Mutable( GetArena());
}
inline std::string* MeasInfo::release_meas_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xapp.MeasInfo.meas_name)
  return _impl_.meas_name_.Release();
}
inline void MeasInfo::set_allocated_meas_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.meas_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.meas_name_.IsDefault()) {
          _impl_.meas_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xapp.MeasInfo.meas_name)
}

// uint64 int_value = 2;
inline bool MeasInfo::has_int_value() const {
  return meas_value_case() == kIntValue;
}
inline void MeasInfo::set_has_int_value() {
  _impl_._oneof_case_[0] = kIntValue;
}
inline void MeasInfo::clear_int_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (meas_value_case() == kIntValue) {
    _impl_.meas_value_.int_value_ = ::uint64_t{0u};
    clear_has_meas_value();
  }
}
inline ::uint64_t MeasInfo::int_value() const {
  // @@protoc_insertion_point(field_get:xapp.MeasInfo.int_value)
  return _internal_int_value();
}
inline void MeasInfo::set_int_value(::uint64_t value) {
  if (meas_value_case() != kIntValue) {
    clear_meas_value();
    set_has_int_value();
  }
  _impl_.meas_value_.int_value_ = value;
  // @@protoc_insertion_point(field_set:xapp.MeasInfo.int_value)
}
inline ::uint64_t MeasInfo::_internal_int_value() const {
  if (meas_value_case() == kIntValue) {
    return _impl_.meas_value_.int_value_;
  }
  return ::uint64_t{0u};
}

// double real_value = 3;
inline bool MeasInfo::has_real_value() const {
  return meas_value_case() == kRealValue;
}
inline void MeasInfo::set_has_real_value() {
  _impl_._oneof_case_[0] = kRealValue;
}
inline void MeasInfo::clear_real_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (meas_value_case() == kRealValue) {
    _impl_.meas_value_.real_value_ = 0;
    clear_has_meas_value();
  }
}
inline double MeasInfo::real_value() const {
  // @@protoc_insertion_point(field_get:xapp.MeasInfo.real_value)
  return _internal_real_value();
}
inline void MeasInfo::set_real_value(double value) {
  if (meas_value_case() != kRealValue) {
    clear_meas_value();
    set_has_real_value();
  }
  _impl_.meas_value_.real_value_ = value;
  // @@protoc_insertion_point(field_set:xapp.MeasInfo.real_value)
}
inline double MeasInfo::_internal_real_value() const {
  if (meas_value_case() == kRealValue) {
    return _impl_.meas_value_.real_value_;
  }
  return 0;
}

inline bool MeasInfo::has_meas_value() const {
  return meas_value_case() != MEAS_VALUE_NOT_SET;
}
inline void MeasInfo::clear_has_meas_value() {
  _impl_._oneof_case_[0] = MEAS_VALUE_NOT_SET;
}
inline MeasInfo::MeasValueCase MeasInfo::meas_value_case() const {
  return MeasInfo::MeasValueCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace xapp


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_protobuf_2fxapp_2eproto_2epb_2eh
