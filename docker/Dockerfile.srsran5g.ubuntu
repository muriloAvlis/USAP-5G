ARG UBUNTU_VERSION=24.04

#----------------------------------------------------------------------#
#------------------------- BUILDER STAGE ------------------------------#
#----------------------------------------------------------------------#

FROM ubuntu:${UBUNTU_VERSION} AS builder

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=America/Belem
ENV SRSRAN_VERSION=release_24_04

LABEL org.opencontainers.image.authors="Murilo Silva <murilosilva@itec.ufpa.br>" \
    org.opencontainers.image.vendor="GERCOM/UFPA" \
    org.opencontainers.image.licenses="Apache-2.0" \
    org.opencontainers.image.version=${SRSRAN_VERSION}

WORKDIR /

## Install package dependencies
RUN apt update \
    && apt upgrade -y \
    && apt install -y \
    cmake \
    make \
    gcc \
    g++ \
    pkg-config \
    libfftw3-dev \
    libmbedtls-dev \
    libsctp-dev \
    libyaml-cpp-dev \
    libgtest-dev \
    git \
    build-essential \
    ninja-build \
    ccache \
    libbackward-cpp-dev \
    libzmq3-dev \
    tar \
    curl \
    python3-pip \
    python3-pyelftools \
    libnuma-dev \
    meson \
    software-properties-common \
    libboost-program-options-dev \
    libdpdk-dev \
    libelf-dev \
    libdwarf-dev \
    xz-utils \
    apt-transport-https \
    ca-certificates \
    libfdt-dev \
    pciutils \
    libdw-dev \
    binutils-dev \
    libconfig++-dev

## Install UHD (for USRPs)
RUN add-apt-repository ppa:ettusresearch/uhd \
    && apt update \
    && apt -y install libuhd-dev uhd-host

## Install DPDK
RUN curl -LO https://fast.dpdk.org/rel/dpdk-23.11.1.tar.xz \
    && tar -xvf dpdk-23.11.1.tar.xz \
    && rm -rf dpdk-23.11.1.tar.xz \
    && cd dpdk-stable-23.11.1 \
    && meson setup build \
    && cd build \
    && ninja \
    && meson install \
    && ldconfig

## Install SRSRAN-5G
RUN git clone https://github.com/srsran/srsRAN_Project.git \
    && cd srsRAN_Project \
    && git checkout ${SRSRAN_VERSION} \
    && mkdir build \
    && cd build \
    && cmake \
    -DCMAKE_INSTALL_PREFIX=/srsRAN_Project/target \
    -DENABLE_EXPORT=ON \
    -DENABLE_ZEROMQ=ON \
    # -DENABLE_ASAN=ON \
    -DBUILD_TESTS=OFF \
    -DENABLE_DPDK=ON \
    -DENABLE_LIBNUMA=ON \
    -DASSERT_LEVEL=MINIMAL .. \
    && make -j $(nproc)

RUN cd srsRAN_Project/build && make install

#----------------------------------------------------------------------#
#------------------------- FINAL STAGE --------------------------------#
#----------------------------------------------------------------------#

FROM ubuntu:${UBUNTU_VERSION}

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=America/Belem
ENV SRSRAN_VERSION=release_24_04
ENV UHD_IMAGES_DIR=/usr/share/uhd/images/

LABEL org.opencontainers.image.authors="Murilo Silva <murilosilva@itec.ufpa.br>" \
    org.opencontainers.image.vendor="GERCOM/UFPA" \
    org.opencontainers.image.licenses="Apache-2.0" \
    org.opencontainers.image.version=${SRSRAN_VERSION}

## Install package dependencies
RUN apt update && \
    apt install -y \
    gettext \
    dnsutils \
    software-properties-common \
    libboost-program-options-dev \
    libzmq3-dev \
    libconfig++-dev \
    libfftw3-dev \ 
    libmbedtls-dev \
    libsctp-dev  \
    libyaml-cpp-dev \ 
    libgtest-dev \
    libnuma-dev \
    iproute2 \
    net-tools \
    curl \
    iptables \
    iputils-ping \
    traceroute \
    python3-pip \
    python3-pyelftools

## Install UHD (for USRPs)
RUN add-apt-repository ppa:ettusresearch/uhd \
    && apt update \
    && apt install -y libuhd-dev uhd-host \
    && uhd_images_downloader

## Copy files from builder stage
COPY --from=builder /srsRAN_Project/target/bin/ /opt/srsRAN_Project/target/bin/
COPY --from=builder /srsRAN_Project/target/share/srsran/ /opt/srsRAN_Project/target/share/srsran/
COPY --from=builder /srsRAN_Project/target/lib/ /opt/srsRAN_Project/target/lib/
COPY --from=builder /usr/local/lib/x86_64-linux-gnu /usr/local/lib/x86_64-linux-gnu
COPY --from=builder /usr/lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu
COPY --from=builder /usr/local/bin/dpdk-* /usr/local/bin
COPY --from=builder /usr/local/include /usr/local/include

RUN ldconfig

WORKDIR /opt

## Set up hugepages to DPDK (privileged mode required)
# dpdk-hugepages.py -p 1G --setup 8G
# sudo mkdir -p /mnt/huge
# echo "nodev /mnt/huge hugetlbfs pagesize=1G 0 0" >> /etc/fstab

## Copy entrypoint (TODO: create a generic entrypoint)
COPY ./scripts/srsran_entrypoint.sh /entrypoint.sh

RUN chmod +x /entrypoint.sh

ENTRYPOINT [ "/entrypoint.sh" ]