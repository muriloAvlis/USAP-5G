#---------------------------------------------#
#--------------- Builder Stage ---------------#
#---------------------------------------------#

FROM golang:1.23.1-bookworm AS builder

ARG DEBIAN_FRONTEND=noninteractive
WORKDIR /builder

## Install dependencies
RUN apt-get update && \
    apt-get install -y build-essential cmake ccache curl

## Install RMR lib
# COPY ./dependencies ./dependencies
# RUN dpkg -i ./dependencies/rmr-dev_4.9.4_amd64.deb

## Install RMR lib from deb packages at packagecloud.io
ARG RMR_PKG=rmr_4.9.4_amd64.deb
ARG RMR_PKG_DEV=rmr-dev_4.9.4_amd64.deb

RUN curl -Lo ${RMR_PKG} https://packagecloud.io/o-ran-sc/release/packages/debian/stretch/${RMR_PKG}/download.deb && \
    dpkg -i ${RMR_PKG} && rm -f ${RMR_PKG}
RUN curl -Lo ${RMR_PKG_DEV} https://packagecloud.io/o-ran-sc/release/packages/debian/stretch/${RMR_PKG_DEV}/download.deb && \
    dpkg -i ${RMR_PKG_DEV} && rm -f ${RMR_PKG_DEV}

## Install E2AP lib from deb packages at packagecloud.io
ARG E2AP_PKG=riclibe2ap_1.1.0_amd64.deb
ARG E2AP_PKG_DEV=riclibe2ap-dev_1.1.0_amd64.deb

RUN curl -Lo ${E2AP_PKG} https://packagecloud.io/o-ran-sc/release/packages/debian/stretch/${E2AP_PKG}/download.deb && \
    dpkg -i ${E2AP_PKG} && rm -f ${E2AP_PKG}
RUN curl -Lo ${E2AP_PKG_DEV} https://packagecloud.io/o-ran-sc/release/packages/debian/stretch/${E2AP_PKG_DEV}/download.deb && \
    dpkg -i ${E2AP_PKG_DEV} && rm -f ${E2AP_PKG_DEV}

## Fix: E2AP oer bug
COPY libasn1coder/libs/e2sm/kpm/oer_* /usr/local/include/riclibe2ap/

RUN export LD_LIBRARY_PATH=/usr/local/lib && ldconfig

COPY go.mod go.sum ./
RUN go mod download && go mod verify
COPY . .
RUN mkdir -p bin

## Build App
RUN go build -v -o ./bin ./...


#---------------------------------------------#
#---------------- Final Stage ----------------#
#---------------------------------------------#

FROM bitnami/minideb:bookworm

## Set Timezone
ENV TZ=America/Belem

RUN install_packages tzdata dnsutils net-tools

## Copy dependencies
COPY --from=builder /usr/local/include/ /usr/local/include/
COPY --from=builder /usr/local/lib/ /usr/local/lib/

## Copy app bin
COPY --from=builder /builder/bin/usap /usr/local/bin/usap

# Required to find nng and rmr libs
RUN export LD_LIBRARY_PATH=/usr/local/lib

RUN ldconfig

## Add labels
LABEL br.ufpa.gercom.title="USAP" \
    br.ufpa.gercom.description="UE Smart Allocation Platform on Open 5G Networks (USAP)" \
    br.ufpa.gercom.source="https://github.com/muriloAvlis/USAP" \
    br.ufpa.gercom.authors="Murilo Silva" \ 
    br.ufpa.gercom.maintainer="Murilo Silva <murilosilva@itec.ufpa.br>" \
    br.ufpa.gercom.licenses=""

# xApp-framework stuff
ENV CFG_FILE=/opt/ric/config/config-file.json
ENV RMR_SEED_RT=/opt/ric/config/uta_rtg.rt

ENTRYPOINT ["usap"]