ARG BASE_IMAGE=ubuntu:24.04
ARG FLEXRIC_VERSION=br-flexric
# E2AP_V1/E2AP_V2/E2AP_V3
ARG E2AP_VERSION=E2AP_V3
# KPM_V2_01/KPM_V2_03/KPM_V3_00
ARG KPM_VERSION=KPM_V3_00
ARG XAPP_PYTHON_SWIG=OFF
ARG XAPP_GO_SWIG=ON
# Disable xApp DB
ARG XAPP_DB=NONE_XAPP

#---------------------------------------------------------------------
# DEPENDENCIES BUILDER STAGE
#---------------------------------------------------------------------

FROM $BASE_IMAGE AS oai-flexric-base
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=America/Belem

#install developers pkg/repo
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get upgrade --yes && \
    DEBIAN_FRONTEND=noninteractive apt-get install --yes \
    build-essential \
    libsctp-dev \
    git \
    wget \
    tar \
    m4 \
    automake \
    libtool \
    python3 \
    cmake \
    cmake-curses-gui \
    bison \
    flex \
    gdb \
    libpcre2-dev \
    python3-dev \
    python3-pip \
    gcc-13 \
    g++-13 \
    mold \
    ninja-build \
    ccache \
    autoconf \
    pkg-config \
    autotools-dev \
    yacc \
    libconfig-dev \
    libconfig++-dev \
    libncurses-dev && \
    apt-get clean

## Swig
RUN git clone https://github.com/swig/swig.git && \
    cd swig && \
    git checkout v4.2.1 && \
    ./autogen.sh && \
    ./configure --prefix=/usr/ && \
    make -j8 && \
    make install && \
    ldconfig

## Golang
RUN wget https://go.dev/dl/go1.23.2.linux-amd64.tar.gz \
    && rm -rf /usr/local/go \
    && tar -C /usr/local -xzf go1.23.2.linux-amd64.tar.gz

ENV PATH=$PATH:/usr/local/go/bin

#---------------------------------------------------------------------
# FLEXRIC SMs BUILDER STAGE
#---------------------------------------------------------------------
FROM oai-flexric-base AS oai-flexric-builder

ARG FLEXRIC_VERSION
ARG E2AP_VERSION
ARG KPM_VERSION
ARG XAPP_PYTHON_SWIG
ARG XAPP_GO_SWIG
ARG XAPP_DB

WORKDIR /

RUN git clone https://gitlab.eurecom.fr/mosaic5g/flexric.git -b ${FLEXRIC_VERSION}

## That is need to fix errors in compilation stage
COPY br-flexric_fix/slice.go /flexric/examples/xApp/go/FlexPolicy/utils/sm/slice/slice.go
COPY br-flexric_fix/xapp_slice_moni_ctrl_main.go /flexric/examples/xApp/go/slice_moni_ctrl/xapp_slice_moni_ctrl_main.go
COPY br-flexric_fix/xapp_slice_term_ui_main.go /flexric/examples/xApp/go/slice_term_ui/xapp_slice_term_ui_main.go

RUN cd flexric && \
    mkdir build && \
    cd build && \
    cmake -GNinja -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_C_FLAGS_RELEASE="-O3" \
    -DCMAKE_CXX_FLAGS_RELEASE="-O3" \
    -DCMAKE_C_COMPILER=gcc-13 \
    -DCMAKE_CXX_COMPILER=g++-13 \
    -DE2AP_VERSION=${E2AP_VERSION} \
    -DKPM_VERSION=${KPM_VERSION} \
    -DXAPP_PYTHON_SWIG=${XAPP_PYTHON_SWIG} \
    -DXAPP_GO_SWIG=${XAPP_GO_SWIG} \
    -DXAPP_DB=${XAPP_DB} .. && \
    ninja xapp_sdk_go && \
    ninja install xapp_sdk_go && \
    echo "--- Check shared objects dependencies for xApp shared library ---" && \
    ldd /usr/local/lib/libxapp_sdk.so && \
    echo "--- Check shared objects dependencies for xApp shared library ---" && \
    ldd /flexric/build/src/xApp/libe42_xapp_shared.so

#---------------------------------------------------------------------
# xApp BUILDER STAGE
#---------------------------------------------------------------------

FROM oai-flexric-builder AS xapp-builder

WORKDIR /builder

## Build usap-xapp
COPY usap-xapp/go.mod usap-xapp/go.sum ./
RUN go mod download && go mod verify
COPY usap-xapp .
RUN go build -v -o /usr/local/bin/usap_xapp ./cmd/usap_xapp/usap_xapp.go

#---------------------------------------------------------------------
# TARGET IMAGE
#---------------------------------------------------------------------

FROM $BASE_IMAGE AS usap-xapp

WORKDIR /

# install pkgs needed to run
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get upgrade --yes && \
    DEBIAN_FRONTEND=noninteractive apt-get install --yes \
    psmisc \
    gpg \
    wget \
    tzdata \
    libsctp1 \
    python3 \
    python3-pip \
    libconfig-dev \
    libconfig++-dev && \
    apt-get autoremove -y && \
    apt-get autoclean -y

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=America/Belem

## Copy FlexRIC Service Models
COPY --from=oai-flexric-builder \
    /usr/local/lib/flexric/libmac_sm.so \
    /usr/local/lib/flexric/libkpm_sm.so \
    /usr/local/lib/flexric/librlc_sm.so \
    /usr/local/lib/flexric/libslice_sm.so \
    /usr/local/lib/flexric/libtc_sm.so \
    /usr/local/lib/flexric/libgtp_sm.so \
    /usr/local/lib/flexric/libpdcp_sm.so \
    /usr/local/lib/flexric/librc_sm.so \
    /usr/local/lib/flexric/

## Copy Go SDK
COPY --from=oai-flexric-builder \
    /usr/local/lib/libxapp_sdk.so \
    /usr/local/lib/libxapp_sdk.so

## Copy xApp SDK
COPY --from=oai-flexric-builder \
    /flexric/build/src/xApp/libe42_xapp_shared.so \
    /usr/local/lib/libe42_xapp_shared.so

## Copy xApp 
COPY --from=xapp-builder /usr/local/bin/usap_xapp /usr/local/bin/usap_xapp

## Copy Config file
COPY usap-xapp/configs/xapp.conf /etc/usap-xapp/xapp.conf

RUN ldconfig && \
    echo "--- Check shared objects dependencies for xApp shared library ---" && \
    ldd /usr/local/lib/libxapp_sdk.so && \
    echo "--- Check shared objects dependencies for xApp shared library ---" && \
    ldd /usr/local/lib/libe42_xapp_shared.so && \
    echo "--- Check shared objects dependencies for flexric shared libraries ---" && \
    ldd /usr/local/lib/flexric/*.so && \
    echo "--- Check shared objects dependencies for executable xapp_usap ---" && \
    ldd /usr/local/bin/usap_xapp

## E42
EXPOSE 36422/sctp

CMD ["-c", "/etc/usap-xapp/xapp.conf" ]
ENTRYPOINT [ "usap_xapp" ]
